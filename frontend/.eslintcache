[{"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/index.js":"1","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/LandingPage.js":"2","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Footer.js":"3","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/ExamplesNavbar.js":"4","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Syntax.js":"5","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/parser.js":"6","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetDisplay.jsx":"7","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/evaluate.js":"8"},{"size":981,"mtime":1618111967266,"results":"9","hashOfConfig":"10"},{"size":19380,"mtime":1618122275436,"results":"11","hashOfConfig":"10"},{"size":1735,"mtime":1618091918919,"results":"12","hashOfConfig":"10"},{"size":14985,"mtime":1618122653148,"results":"13","hashOfConfig":"10"},{"size":4821,"mtime":1618114279110,"results":"14","hashOfConfig":"10"},{"size":6256,"mtime":1618113772133,"results":"15","hashOfConfig":"10"},{"size":4346,"mtime":1618114610462,"results":"16","hashOfConfig":"10"},{"size":11167,"mtime":1618113751346,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1pjcth3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/index.js",[],["38","39"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/LandingPage.js",["40","41","42","43","44","45"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Footer.js",["46","47","48","49"],"/*!\n\n=========================================================\n* BLK Design System React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// reactstrap components\nimport { Button, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from 'reactstrap';\n\nexport default function Footer() {\n  return (\n    <footer className='footer'>\n      <Container>\n        <Row>\n          <Col md='3'>\n            <h1 className='title'>MMD â€¢ Music Markdown</h1>\n          </Col>\n          <Col md='6'></Col>\n          <Col md='3'>\n            <h3 className='title'>Follow us:</h3>\n            <div className='btn-wrapper profile'>\n              <Button\n                className='btn-icon btn-neutral btn-round btn-simple'\n                color='default'\n                href='https://www.github.com'\n                id='tooltip230450801'\n                target='_blank'>\n                <i className='fab fa-github-square' />\n              </Button>\n              <UncontrolledTooltip delay={0} target='tooltip230450801'>\n                Check out our repo\n              </UncontrolledTooltip>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/ExamplesNavbar.js",["50","51"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Syntax.js",[],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/parser.js",["52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"import { evaluate } from './evaluate';\n\nvar musicXML =\n  '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML 3.1 Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\"><score-partwise version=\"3.1\"><work><work-number>Unknown</work-number><work-title>Untitled</work-title></work><part-list></part-list></score-partwise>';\nvar xmlParser = new DOMParser();\nexport var xmlDoc = xmlParser.parseFromString(musicXML, 'application/xml');\n\nconsole.log(musicXML);\n\nfunction isTitle(c) {\n  return /title=[a-zA-Z0-9\\- ]+/.test(c);\n}\n\nfunction isAuthor(c) {\n  return /author=[a-zA-Z0-9\\- ]+/.test(c);\n}\n\nfunction isInstrumentHeader(c) {\n  return /[a-zA-Z0-9 \\-]+\\s*\\{/.test(c);\n}\n\nfunction isInstrumentFooter(c) {\n  return c == '}';\n}\n\nfunction isMeasure(c) {\n  return c[0] == '|';\n}\n\nfunction isMeasureMeta(c) {\n  return /\\$[TB]{1},\\s*[0-9]{1}\\/[0-9]{1},\\s*[ABCDEF]{1}[b#]{0,1}[mM]{1}\\$/.test(c);\n}\n\nfunction isFutureMeasureMeta(c) {\n  return /\\$[0-9]{1}\\/[0-9]{1},\\s*[ABCDEF]{1}[b#]{0,1}[mM]{1}\\$/.test(c);\n}\nfunction isNote(c) {\n  return /\\([ABCDEFGR]{1}[b#]{0,1},\\s*[0-9]+,\\s*[0-9]+,\\s*[a-z]+\\)/.test(c);\n}\n\nfunction isNoteHeader(c) {\n  return c == '(';\n}\n\nfunction isNoteFooter(c) {\n  return c == ')';\n}\n\nfunction isChordHeader(c) {\n  return c == '[';\n}\n\nfunction isChordFooter(c) {\n  return c == ']';\n}\n\n// function isTie(c) {\n//     return c == '-';\n// }\n\nfunction isWhitespace(c) {\n  return /^\\s+$/.test(c);\n}\n\nfunction isNewline(c) {\n  return c == '\\n';\n}\n\nfunction getMeasureData(input) {\n  var measureData = [];\n  var c = '';\n  var i = 1;\n  var advance = function () {\n    return (c = input[++i]);\n  };\n  var addToken = function (tokens, lex_obj) {\n    tokens.push(lex_obj);\n    return tokens;\n  };\n\n  var chords = [];\n  var isInChord = false;\n  var isInNote = false;\n\n  while (i < input.length) {\n    // console.log(c);\n    if (input[i] == ' ') {\n      i++;\n      continue;\n    }\n    c += input[i];\n    console.log(c);\n    // if (isWhitespace(c)) {\n    //     // advance();\n    //     if (!isInChord && !isInNote) {\n    //         console.log(\"hit\");\n    //         c = \"\";\n    //     }\n    //     console.log(c);\n    //     i++;\n    // } else\n\n    if (isMeasureMeta(c)) {\n      measureData = addToken(measureData, { type: 'measureMeta', value: c });\n      c = '';\n      i++;\n      console.log(c);\n    } else if (isFutureMeasureMeta(c)) {\n      measureData = addToken(measureData, { type: 'futureMeasureMeta', value: c });\n      c = '';\n      i++;\n      console.log(c);\n    } else if (isNote(c)) {\n      console.log('hit isnote');\n      if (!isInChord) {\n        measureData = addToken(measureData, { type: 'note', value: c });\n        // advance();\n        c = '';\n        i++;\n        console.log(c);\n      } else {\n        chords = addToken(chords, { type: 'note', value: /\\([ABCDEFGR]{1}[b#]{0,1},\\s*[0-9]+,\\s*[0-9]+,\\s*[a-z]+\\)/.exec(c)[0] });\n        // advance();\n        c = '';\n        i++;\n        isInNote = false;\n        console.log(c);\n      }\n    } else if (isChordHeader(c)) {\n      isInChord = true;\n      chords = [];\n      c = '';\n      i++;\n    } else if (isChordFooter(c)) {\n      isInChord = false;\n      measureData = addToken(measureData, { type: 'chord', value: chords });\n      c = '';\n      i++;\n    } else {\n      if (isNoteHeader(c)) {\n        console.log('hit noteheader');\n        isInNote = true;\n      }\n      if (isNoteFooter(c)) {\n        console.log('hit notefooter');\n        isInNote = false;\n      }\n      i++;\n    }\n  }\n\n  return measureData;\n}\n\nfunction lex(input) {\n  var tokens = [];\n  var c = '';\n  var i = 0;\n  var advance = function () {\n    return (c = input[++i]);\n  };\n\n  var addToken = function (tokens, lex_obj) {\n    tokens.push(lex_obj);\n    return tokens;\n  };\n\n  var input_split = input.split('\\n');\n  var measures = [];\n  var measureData = [];\n  var staveNum = 1;\n  var measureNum = 0;\n  var instrument = '';\n  var isInInstrument = false;\n\n  for (var i = 0; i < input_split.length; i++) {\n    var line = input_split[i].trim();\n    if (isTitle(line)) {\n      tokens = addToken(tokens, { type: 'title', value: line });\n    } else if (isAuthor(line)) {\n      tokens = addToken(tokens, { type: 'author', value: line });\n    } else {\n      if (isInstrumentHeader(line)) {\n        isInInstrument = true;\n        measures = [];\n        measureNum = 1;\n        staveNum = 0;\n        instrument = /[a-zA-Z]+/.exec(line)[0];\n      } else {\n        if (isMeasure(line)) {\n          staveNum++;\n          measureData = getMeasureData(line);\n          measures = addToken(measures, { type: 'measure', value: measureData, staveNum: staveNum, measureNum: measureNum });\n        } else if (line == '' && isInInstrument == true) {\n          console.log('hit');\n          staveNum = 0;\n          measureNum++;\n        } else if (isInstrumentFooter(line)) {\n          isInInstrument = false;\n          tokens = addToken(tokens, { type: 'instrument', instrument: instrument, value: measures });\n        }\n      }\n    }\n  }\n\n  return tokens;\n}\n\nvar glob_tokens;\n\nexport function parse_and_evaluate(str) {\n  musicXML =\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML 3.1 Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\"><score-partwise version=\"3.1\"><work><work-number>Unknown</work-number><work-title>Untitled</work-title></work><part-list></part-list></score-partwise>';\n  xmlParser = new DOMParser();\n  xmlDoc = xmlParser.parseFromString(musicXML, 'application/xml');\n  // let text = document.getElementById('music_markdown_textarea').value;\n  let tokens = lex(str);\n  // glob_tokens = tokens;\n  console.log(tokens);\n  xmlDoc = evaluate(tokens);\n  let xmlserializer = new XMLSerializer();\n  return xmlserializer.serializeToString(xmlDoc);\n  // return tokens;\n}\n\n// console.log(isMeasureMeta(\"$T, 4/4, Am$\"));\n\n/*\ntitle=me\nauthor=me\npiano {\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n}\n*/\n","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetDisplay.jsx",[],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/evaluate.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import { xmlDoc } from './parser';\n\nvar getFifths = {\n  CM: 0,\n  Am: 0,\n  GM: 1,\n  Em: 1,\n  DM: 2,\n  Bm: 2,\n  AM: 3,\n  'F#m': 3,\n  EM: 4,\n  'C#M': 4,\n  BM: 5,\n  'G#m': 5,\n  'F#M': 6,\n  'D#m': 6,\n  'C#M': 7,\n  'A#m': 7,\n  FM: -1,\n  Dm: -1,\n  BbM: -2,\n  Gm: -2,\n  EbM: -3,\n  Cm: -3,\n  AbM: -4,\n  Fm: -4,\n  DbM: -5,\n  Bbm: -5,\n  GbM: -6,\n  Ebm: -6,\n  CbM: -7,\n  Abm: -7,\n};\n\nvar maxStave = 0;\nvar lastMeasureNumber = 0;\n\nvar initializedAttributes = false;\nvar lastTimeSig = '';\nvar lastKey = '';\n\nexport function evaluate(lexedInfo) {\n  lastMeasureNumber = 0;\n  function handleNote(note, isChord, staffNo) {\n    let noteElem = xmlDoc.createElement('note');\n\n    let staffElem = xmlDoc.createElement('staff');\n    staffElem.innerHTML = staffNo;\n\n    noteElem.appendChild(staffElem);\n\n    let noteData = note.substring(1, note.length - 1).split(',');\n    console.log(noteData);\n\n    let markdownNote = noteData[0].substring(0, 1);\n    let isRest = false;\n    if (markdownNote === 'R') {\n      isRest = true;\n    }\n    let mardownAlter = noteData[0].substring(1, 2);\n    let markdownOctave = noteData[1];\n    let markdownDuration = noteData[2];\n    let markdownType = noteData[3];\n\n    let pitchElem = xmlDoc.createElement('pitch');\n    let stepElem = xmlDoc.createElement('step');\n    let alterElem = xmlDoc.createElement('alter');\n    let octaveElem = xmlDoc.createElement('octave');\n    let typeElem = xmlDoc.createElement('type');\n    let durationElem = xmlDoc.createElement('duration');\n    if (isRest) {\n      var restElem = xmlDoc.createElement('rest');\n      restElem.setAttribute('measure', 'yes');\n    }\n\n    stepElem.innerHTML = markdownNote;\n    if (mardownAlter == 'b') {\n      alterElem.innerHTML = '-1';\n    } else if (mardownAlter == '#') {\n      alterElem.innerHTML = '1';\n    }\n\n    octaveElem.innerHTML = markdownOctave;\n    durationElem.innerHTML = markdownDuration;\n    typeElem.innerHTML = markdownType;\n    // typeElem.innerHTML = \"quarter\";\n\n    pitchElem.appendChild(stepElem);\n    pitchElem.appendChild(alterElem);\n    pitchElem.appendChild(octaveElem);\n\n    if (isRest) {\n      noteElem.appendChild(restElem);\n      noteElem.appendChild(durationElem);\n      return noteElem;\n    }\n    noteElem.appendChild(pitchElem);\n    noteElem.appendChild(durationElem);\n    noteElem.appendChild(typeElem);\n\n    if (isChord) {\n      let chordElem = xmlDoc.createElement('chord');\n      noteElem.appendChild(chordElem);\n    }\n\n    return noteElem;\n  }\n\n  function handleMeasure(measure) {\n    // let tempString = \"\";\n    let measureNode = '';\n    if (measure.measureNum == lastMeasureNumber) {\n      console.log('hit eq ' + lastMeasureNumber);\n      let measureNodes = xmlDoc.getElementsByTagName('measure');\n      console.log(measureNodes.length);\n      for (let i = 0; i < measureNodes.length; i++) {\n        console.log(measureNodes[i].getAttribute('number') + ' ' + lastMeasureNumber);\n        if (measureNodes[i].getAttribute('number') == lastMeasureNumber) {\n          measureNode = measureNodes[i];\n          break;\n        }\n      }\n    } else {\n      console.log('hit not eq');\n      measureNode = xmlDoc.createElement('measure');\n      measureNode.setAttribute('number', measure.measureNum);\n    }\n\n    let measureLexElems = measure.value;\n    // let staveElem = xmlDoc.createElement(\"staves\");\n    for (let i = 0; i < measureLexElems.length; i++) {\n      var measureLexElem = measureLexElems[i];\n      if (measure.measureNum == 1 && i == 0 && measureLexElem.type != 'measureMeta') {\n        console.log(measure.measureNum, measureLexElem.type);\n        throw 'Syntax Error';\n      }\n      if (measureLexElem.type == 'measureMeta') {\n        let attributesElem = '';\n        let staveElem = '';\n        // will only be one element\n        console.log(measureNode);\n        let attributesElems = measureNode.getElementsByTagName('attributes');\n        if (attributesElems.length != 0) {\n          attributesElem = attributesElems[0];\n          staveElem = attributesElem.getElementsByTagName('staves')[0];\n        } else {\n          attributesElem = xmlDoc.createElement('attributes');\n          staveElem = xmlDoc.createElement('staves');\n        }\n\n        console.log(attributesElem);\n        let measureMeta = measureLexElem.value.substring(1, measureLexElem.value.length - 1).split(',');\n\n        let markdownClef = measureMeta[0];\n        let markdownTimeSig = measureMeta[1];\n        let markdownKeySig = measureMeta[2];\n\n        let xmlClef = '';\n        if (markdownClef == 'T') {\n          xmlClef = 'G';\n        } else if (markdownClef == 'B') {\n          xmlClef = 'F';\n        } else {\n          throw 'Syntax Error';\n        }\n        console.log(measure + ' ' + measure.staveNum);\n        let clefElem = xmlDoc.createElement('clef');\n        if (measure.staveNum > maxStave) {\n          staveElem.innerHTML = measure.staveNum;\n        }\n        if (attributesElem.getElementsByTagName('staves').length == 0) {\n          attributesElem.appendChild(staveElem);\n        }\n\n        clefElem.setAttribute('number', measure.staveNum);\n        let clefSignElem = xmlDoc.createElement('sign');\n        clefSignElem.innerHTML = xmlClef;\n        let clefLineElem = xmlDoc.createElement('line');\n        clefLineElem.innerHTML = '2';\n        clefElem.appendChild(clefSignElem);\n        clefElem.appendChild(clefLineElem);\n        attributesElem.appendChild(clefElem);\n\n        if (attributesElem.getElementsByTagName('divisions').length == 0) {\n          let divisionsElem = xmlDoc.createElement('divisions');\n          divisionsElem.innerHTML = '24';\n          attributesElem.appendChild(divisionsElem);\n        }\n\n        if (attributesElem.getElementsByTagName('time').length == 0) {\n          let timeSigElem = xmlDoc.createElement('time');\n          let beatsElem = xmlDoc.createElement('beats');\n          let beatsTypeElem = xmlDoc.createElement('beats-type');\n\n          let beatsLexData = markdownTimeSig.split('/');\n\n          beatsElem.innerHTML = beatsLexData[0];\n          beatsTypeElem.innerHTML = beatsLexData[1];\n\n          timeSigElem.appendChild(beatsElem);\n          timeSigElem.appendChild(beatsTypeElem);\n          attributesElem.appendChild(timeSigElem);\n        }\n\n        if (attributesElem.getElementsByTagName('key').length == 0) {\n          let keySigElem = xmlDoc.createElement('key');\n          let fifthsElem = xmlDoc.createElement('fifths');\n\n          fifthsElem.innerHTML = getFifths[markdownKeySig];\n\n          keySigElem.appendChild(fifthsElem);\n          attributesElem.appendChild(keySigElem);\n        }\n\n        if (measureNode.getElementsByTagName('attributes').length == 0) {\n          measureNode.insertBefore(attributesElem, measureNode.firstChild);\n        }\n      } else if (measureLexElem.type == 'futureMeasureMeta') {\n        let attributesElem = '';\n        // will only be one element\n        console.log(measureNode);\n        let attributesElems = measureNode.getElementsByTagName('attributes');\n        if (attributesElems.length != 0) {\n          attributesElem = attributesElems[0];\n        } else {\n          attributesElem = xmlDoc.createElement('attributes');\n        }\n\n        let measureMeta = measureLexElem.value.substring(1, measureLexElem.value.length - 1).split(',');\n\n        let markdownTimeSig = measureMeta[0];\n        let markdownKeySig = measureMeta[1];\n\n        if (attributesElem.getElementsByTagName('time').length == 0) {\n          let timeSigElem = xmlDoc.createElement('time');\n          let beatsElem = xmlDoc.createElement('beats');\n          let beatsTypeElem = xmlDoc.createElement('beats-type');\n\n          let beatsLexData = markdownTimeSig.split('/');\n\n          beatsElem.innerHTML = beatsLexData[0];\n          beatsTypeElem.innerHTML = beatsLexData[1];\n\n          timeSigElem.appendChild(beatsElem);\n          timeSigElem.appendChild(beatsTypeElem);\n          attributesElem.appendChild(timeSigElem);\n        }\n\n        if (attributesElem.getElementsByTagName('key').length == 0) {\n          let keySigElem = xmlDoc.createElement('key');\n          let fifthsElem = xmlDoc.createElement('fifths');\n\n          fifthsElem.innerHTML = getFifths[markdownKeySig];\n\n          keySigElem.appendChild(fifthsElem);\n          attributesElem.appendChild(keySigElem);\n        }\n        if (measureNode.getElementsByTagName('attributes').length == 0) {\n          measureNode.insertBefore(attributesElem, measureNode.firstChild);\n        }\n      } else if (measureLexElem.type == 'chord') {\n        let chordNotes = measureLexElem.value;\n        console.log(chordNotes);\n        for (let j = 0; j < chordNotes.length; j++) {\n          let firstNote = j == 0;\n          let noteXML = handleNote(chordNotes[j].value, !firstNote, measure.staveNum);\n          measureNode.appendChild(noteXML);\n        }\n      } else if (measureLexElem.type == 'note') {\n        let noteXML = handleNote(measureLexElem.value, false, measure.staveNum);\n        measureNode.appendChild(noteXML);\n      }\n    }\n    return measureNode;\n  }\n  function handleInstrument(instrument, partNum) {\n    maxStave = 0;\n    let tempString = '';\n    let type = instrument.instrument;\n\n    let partList = xmlDoc.getElementsByTagName('part-list')[0];\n\n    let scorePart = xmlDoc.createElement('score-part');\n    scorePart.id = 'P' + partNum;\n\n    let partName = xmlDoc.createElement('part-name');\n    partName.innerHTML = type;\n\n    scorePart.appendChild(partName);\n    partList.appendChild(scorePart);\n\n    let partMeasures = xmlDoc.createElement('part');\n    partMeasures.id = scorePart.id;\n    xmlDoc.getElementsByTagName('score-partwise')[0].appendChild(partMeasures);\n\n    let measures = instrument.value;\n    for (let i = 0; i < measures.length; i++) {\n      if (measures[i].measureNum == 2) {\n        initializedAttributes = true;\n      }\n      let measureXML = handleMeasure(measures[i], false);\n      if (measures[i].measureNum != lastMeasureNumber) {\n        console.log('appended');\n        partMeasures.appendChild(measureXML);\n        lastMeasureNumber = measures[i].measureNum;\n      }\n    }\n\n    return partMeasures;\n  }\n\n  var instrumentNum = 0;\n  for (var i = 0; i < lexedInfo.length; i++) {\n    if (lexedInfo[i].type === 'author') {\n      // curString += \"<work-number>\" + lexedInfo[i].value + \"</work-title>\";\n\n      xmlDoc.getElementsByTagName('work-number')[0].innerHTML = lexedInfo[i].value.substring(7, lexedInfo[i].value.length);\n    } else if (lexedInfo[i].type === 'title') {\n      // curString += \"<work-title>\" + lexedInfo[i].value + \"</work-title>\";\n      xmlDoc.getElementsByTagName('work-title')[0].innerHTML = lexedInfo[i].value.substring(6, lexedInfo[i].value.length);\n    } else {\n      instrumentNum++;\n      lastMeasureNumber = 0;\n      // type is instrument\n      // if (curString === \"<work>\") {\n      //     // no title/author provided\n      //     curString += \"<work-title>New Song</work-title></work>\";\n      // }\n      // for (let j = 0; j < lexedInfo[i].value.length; j++) {\n      let instrumentXML = handleInstrument(lexedInfo[i], instrumentNum);\n      xmlDoc.getElementsByTagName('score-partwise')[0].appendChild(instrumentXML);\n      // }\n    }\n  }\n\n  return xmlDoc;\n}\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":24,"nodeType":"110","messageId":"111","endLine":2,"endColumn":34},{"ruleId":"108","severity":1,"message":"112","line":2,"column":58,"nodeType":"110","messageId":"111","endLine":2,"endColumn":67},{"ruleId":"108","severity":1,"message":"113","line":2,"column":69,"nodeType":"110","messageId":"111","endLine":2,"endColumn":82},{"ruleId":"108","severity":1,"message":"114","line":2,"column":84,"nodeType":"110","messageId":"111","endLine":2,"endColumn":93},{"ruleId":"108","severity":1,"message":"115","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":13},{"ruleId":"108","severity":1,"message":"116","line":244,"column":10,"nodeType":"110","messageId":"111","endLine":244,"endColumn":31},{"ruleId":"108","severity":1,"message":"117","line":19,"column":10,"nodeType":"110","messageId":"111","endLine":19,"endColumn":14},{"ruleId":"108","severity":1,"message":"118","line":21,"column":18,"nodeType":"110","messageId":"111","endLine":21,"endColumn":25},{"ruleId":"108","severity":1,"message":"119","line":21,"column":27,"nodeType":"110","messageId":"111","endLine":21,"endColumn":34},{"ruleId":"108","severity":1,"message":"120","line":21,"column":36,"nodeType":"110","messageId":"111","endLine":21,"endColumn":39},{"ruleId":"108","severity":1,"message":"121","line":61,"column":10,"nodeType":"110","messageId":"111","endLine":61,"endColumn":22},{"ruleId":"108","severity":1,"message":"122","line":62,"column":10,"nodeType":"110","messageId":"111","endLine":62,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":19,"column":22,"nodeType":"125","messageId":"126","endLine":19,"endColumn":23,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":23,"column":12,"nodeType":"130","messageId":"131","endLine":23,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":27,"column":15,"nodeType":"130","messageId":"131","endLine":27,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":42,"column":12,"nodeType":"130","messageId":"131","endLine":42,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":46,"column":12,"nodeType":"130","messageId":"131","endLine":46,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":50,"column":12,"nodeType":"130","messageId":"131","endLine":50,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":54,"column":12,"nodeType":"130","messageId":"131","endLine":54,"endColumn":14},{"ruleId":"108","severity":1,"message":"132","line":61,"column":10,"nodeType":"110","messageId":"111","endLine":61,"endColumn":22},{"ruleId":"108","severity":1,"message":"133","line":65,"column":10,"nodeType":"110","messageId":"111","endLine":65,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":66,"column":12,"nodeType":"130","messageId":"131","endLine":66,"endColumn":14},{"ruleId":"108","severity":1,"message":"134","line":73,"column":7,"nodeType":"110","messageId":"111","endLine":73,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":87,"column":18,"nodeType":"130","messageId":"131","endLine":87,"endColumn":20},{"ruleId":"108","severity":1,"message":"135","line":146,"column":9,"nodeType":"110","messageId":"111","endLine":146,"endColumn":17},{"ruleId":"108","severity":1,"message":"134","line":159,"column":7,"nodeType":"110","messageId":"111","endLine":159,"endColumn":14},{"ruleId":"108","severity":1,"message":"136","line":160,"column":13,"nodeType":"110","messageId":"111","endLine":160,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":176,"column":12,"nodeType":"110","messageId":"139","endLine":176,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":194,"column":25,"nodeType":"130","messageId":"131","endLine":194,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":194,"column":49,"nodeType":"130","messageId":"131","endLine":194,"endColumn":51},{"ruleId":"108","severity":1,"message":"140","line":209,"column":5,"nodeType":"110","messageId":"111","endLine":209,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":18,"column":3,"nodeType":"143","messageId":"131","endLine":18,"endColumn":8},{"ruleId":"108","severity":1,"message":"144","line":40,"column":5,"nodeType":"110","messageId":"111","endLine":40,"endColumn":16},{"ruleId":"108","severity":1,"message":"145","line":41,"column":5,"nodeType":"110","messageId":"111","endLine":41,"endColumn":12},{"ruleId":"128","severity":1,"message":"129","line":78,"column":22,"nodeType":"130","messageId":"131","endLine":78,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":80,"column":29,"nodeType":"130","messageId":"131","endLine":80,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":113,"column":28,"nodeType":"130","messageId":"131","endLine":113,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":119,"column":52,"nodeType":"130","messageId":"131","endLine":119,"endColumn":54},{"ruleId":"128","severity":1,"message":"129","line":134,"column":30,"nodeType":"130","messageId":"131","endLine":134,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":134,"column":40,"nodeType":"130","messageId":"131","endLine":134,"endColumn":42},{"ruleId":"128","severity":1,"message":"146","line":134,"column":68,"nodeType":"130","messageId":"131","endLine":134,"endColumn":70},{"ruleId":"147","severity":1,"message":"148","line":136,"column":9,"nodeType":"149","messageId":"150","endLine":136,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":138,"column":31,"nodeType":"130","messageId":"131","endLine":138,"endColumn":33},{"ruleId":"128","severity":1,"message":"146","line":144,"column":36,"nodeType":"130","messageId":"131","endLine":144,"endColumn":38},{"ruleId":"128","severity":1,"message":"129","line":160,"column":26,"nodeType":"130","messageId":"131","endLine":160,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":162,"column":33,"nodeType":"130","messageId":"131","endLine":162,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":165,"column":11,"nodeType":"149","messageId":"150","endLine":165,"endColumn":32},{"ruleId":"128","severity":1,"message":"129","line":172,"column":66,"nodeType":"130","messageId":"131","endLine":172,"endColumn":68},{"ruleId":"128","severity":1,"message":"129","line":185,"column":69,"nodeType":"130","messageId":"131","endLine":185,"endColumn":71},{"ruleId":"128","severity":1,"message":"129","line":191,"column":64,"nodeType":"130","messageId":"131","endLine":191,"endColumn":66},{"ruleId":"128","severity":1,"message":"129","line":206,"column":63,"nodeType":"130","messageId":"131","endLine":206,"endColumn":65},{"ruleId":"128","severity":1,"message":"129","line":216,"column":67,"nodeType":"130","messageId":"131","endLine":216,"endColumn":69},{"ruleId":"128","severity":1,"message":"129","line":219,"column":38,"nodeType":"130","messageId":"131","endLine":219,"endColumn":40},{"ruleId":"128","severity":1,"message":"146","line":224,"column":36,"nodeType":"130","messageId":"131","endLine":224,"endColumn":38},{"ruleId":"128","severity":1,"message":"129","line":235,"column":64,"nodeType":"130","messageId":"131","endLine":235,"endColumn":66},{"ruleId":"128","severity":1,"message":"129","line":250,"column":63,"nodeType":"130","messageId":"131","endLine":250,"endColumn":65},{"ruleId":"128","severity":1,"message":"129","line":259,"column":67,"nodeType":"130","messageId":"131","endLine":259,"endColumn":69},{"ruleId":"128","severity":1,"message":"129","line":262,"column":38,"nodeType":"130","messageId":"131","endLine":262,"endColumn":40},{"ruleId":"128","severity":1,"message":"129","line":266,"column":29,"nodeType":"130","messageId":"131","endLine":266,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":270,"column":38,"nodeType":"130","messageId":"131","endLine":270,"endColumn":40},{"ruleId":"108","severity":1,"message":"151","line":279,"column":9,"nodeType":"110","messageId":"111","endLine":279,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":299,"column":34,"nodeType":"130","messageId":"131","endLine":299,"endColumn":36},{"ruleId":"108","severity":1,"message":"152","line":300,"column":9,"nodeType":"110","messageId":"111","endLine":300,"endColumn":30},{"ruleId":"128","severity":1,"message":"146","line":303,"column":34,"nodeType":"130","messageId":"131","endLine":303,"endColumn":36},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'CardTitle' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'axios' is defined but never used.","'LandingPageDeprecated' is defined but never used.","'Link' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'loginSuccess' is assigned a value but never used.","'loginInfo' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["155","156"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isWhitespace' is defined but never used.","'isNewline' is defined but never used.","'advance' is assigned a value but never used.","'isInNote' is assigned a value but never used.","'c' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'glob_tokens' is defined but never used.","no-dupe-keys","Duplicate key 'C#M'.","ObjectExpression","'lastTimeSig' is assigned a value but never used.","'lastKey' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'tempString' is assigned a value but never used.","'initializedAttributes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[711,712],"",[711,711],"\\"]