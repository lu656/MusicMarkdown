[{"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/index.js":"1","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/LandingPage.js":"2","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetMusicDisplay.jsx":"3","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Footer.js":"4","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/ExamplesNavbar.js":"5","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Syntax.js":"6","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetDisplay.jsx":"7"},{"size":1115,"mtime":1618084245158,"results":"8","hashOfConfig":"9"},{"size":9099,"mtime":1618091224138,"results":"10","hashOfConfig":"9"},{"size":1300,"mtime":1618081408550,"results":"11","hashOfConfig":"9"},{"size":1735,"mtime":1618091918919,"results":"12","hashOfConfig":"9"},{"size":10312,"mtime":1618091097008,"results":"13","hashOfConfig":"9"},{"size":4821,"mtime":1618084124756,"results":"14","hashOfConfig":"9"},{"size":1983,"mtime":1618091224138,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1pjcth3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/index.js",[],["33","34"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/LandingPage.js",["35","36","37","38","39"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetMusicDisplay.jsx",[],["40","41"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Footer.js",["42","43","44","45"],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/ExamplesNavbar.js",["46","47","48","49"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport {\n  Button,\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  Modal,\n  FormGroup,\n  UncontrolledPopover,\n  PopoverBody,\n  PopoverHeader,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n  UncontrolledCarousel,\n} from 'reactstrap';\n\nexport default function ExamplesNavbar() {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [collapseOut, setCollapseOut] = React.useState('');\n  const [color, setColor] = React.useState('navbar-transparent');\n  const [signInFormModal, setsignInFormModal] = React.useState(false);\n  const [signInEmailFocus, setSignInEmailFocus] = React.useState(false);\n  const [signInPasswordFocus, setSignInPasswordFocus] = React.useState(false);\n\n  const [createAccountModal, setCreateAccountModal] = React.useState(false);\n  const [createAccountEmailFocus, setCreateAccountEmailFocus] = React.useState(false);\n  const [createAccountPasswordFocus, setCreateAccountPasswordFocus] = React.useState(false);\n  const [createAccountRetypePasswordFocus, setCreateAccountRetypePasswordFocus] = React.useState(false);\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', changeColor);\n    return function cleanup() {\n      window.removeEventListener('scroll', changeColor);\n    };\n  }, []);\n\n  const changeColor = () => {\n    if (document.documentElement.scrollTop > 99 || document.body.scrollTop > 99) {\n      setColor('bg-info');\n    } else if (document.documentElement.scrollTop < 100 || document.body.scrollTop < 100) {\n      setColor('navbar-transparent');\n    }\n  };\n\n  const toggleCollapse = () => {\n    document.documentElement.classList.toggle('nav-open');\n    setCollapseOpen(!collapseOpen);\n  };\n\n  const onCollapseExiting = () => {\n    setCollapseOut('collapsing-out');\n  };\n\n  const onCollapseExited = () => {\n    setCollapseOut('');\n  };\n\n  return (\n    <Navbar className={'fixed-top ' + color} color-on-scroll='100' expand='lg'>\n      <Container>\n        <div className='navbar-translate'>\n          <NavbarBrand to='/' id='navbar-brand' tag={Link}>\n            <span>MMD • </span>\n            Music Markdown\n          </NavbarBrand>\n          <UncontrolledTooltip placement='bottom' target='navbar-brand'>\n            Designed to make sheet music accessible to everyone\n          </UncontrolledTooltip>\n          <button aria-expanded={collapseOpen} className='navbar-toggler navbar-toggler' onClick={toggleCollapse}>\n            <span className='navbar-toggler-bar bar1' />\n            <span className='navbar-toggler-bar bar2' />\n            <span className='navbar-toggler-bar bar3' />\n          </button>\n        </div>\n        <Collapse\n          className={'justify-content-end ' + collapseOut}\n          navbar\n          isOpen={collapseOpen}\n          onExiting={onCollapseExiting}\n          onExited={onCollapseExited}>\n          <div className='navbar-collapse-header'>\n            <Row>\n              <Col className='collapse-brand' xs='8'>\n                <a href='#pablo' onClick={(e) => e.preventDefault()}>\n                  MMD • Music Markdown\n                </a>\n              </Col>\n              <Col className='collapse-close text-right' xs='4'>\n                <button aria-expanded={collapseOpen} className='navbar-toggler' onClick={toggleCollapse}>\n                  <i className='tim-icons icon-simple-remove' />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          <Nav navbar>\n            <NavItem className='p-0'>\n              <NavLink data-placement='bottom' href='https://github.com' rel='noopener noreferrer' target='_blank' title='Check out our GitHub'>\n                <i className='fab fa-github' />\n                <p className='d-lg-none d-xl-none'>GitHub</p>\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <Button\n                className='nav-link d-none d-lg-block'\n                color='primary'\n                onClick={() => {\n                  setCreateAccountModal(true);\n                }}>\n                <i className='tim-icons icon-spaceship' /> Create an Account\n              </Button>\n            </NavItem>\n            <NavItem>\n              <Button\n                className='nav-link d-none d-lg-block'\n                color='default'\n                onClick={() => {\n                  setsignInFormModal(true);\n                }}>\n                <i className='tim-icons icon-single-02' /> Sign in\n              </Button>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n      <Modal modalClassName='modal-black' isOpen={signInFormModal} toggle={() => setsignInFormModal(false)}>\n        <div className='modal-header justify-content-center'>\n          <button className='close' onClick={() => setsignInFormModal(false)}>\n            <i className='tim-icons icon-simple-remove' />\n          </button>\n          <h4 className='title title-up'>Sign in with email</h4>\n        </div>\n        <div className='modal-body'>\n          <Form role='form'>\n            <FormGroup className='mb-3'>\n              <InputGroup\n                className={classnames('input-group-alternative', {\n                  'input-group-focus': signInEmailFocus,\n                })}>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <i className='tim-icons icon-email-85' />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder='Email' type='email' onFocus={(e) => setSignInEmailFocus(true)} onBlur={(e) => setSignInEmailFocus(false)} />\n              </InputGroup>\n            </FormGroup>\n            <FormGroup>\n              <InputGroup\n                className={classnames('input-group-alternative', {\n                  'input-group-focus': signInPasswordFocus,\n                })}>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <i className='tim-icons icon-key-25' />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  placeholder='Password'\n                  type='password'\n                  onFocus={(e) => setSignInPasswordFocus(true)}\n                  onBlur={(e) => setSignInPasswordFocus(false)}\n                />\n              </InputGroup>\n            </FormGroup>\n            <FormGroup check className='mt-3'>\n              <Label check>\n                <Input defaultChecked type='checkbox' />\n                <span className='form-check-sign' />\n                Remember me!\n              </Label>\n            </FormGroup>\n            <div className='text-center'>\n              <Button className='my-4' color='primary' type='button'>\n                Sign in\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Modal>\n      <Modal modalClassName='modal-black' isOpen={createAccountModal} toggle={() => setCreateAccountModal(false)}>\n        <div className='modal-header justify-content-center'>\n          <button className='close' onClick={() => setCreateAccountModal(false)}>\n            <i className='tim-icons icon-simple-remove' />\n          </button>\n          <h4 className='title title-up'>Create account with email</h4>\n        </div>\n        <div className='modal-body'>\n          <Form role='form'>\n            <FormGroup className='mb-3'>\n              <InputGroup\n                className={classnames('input-group-alternative', {\n                  'input-group-focus': createAccountEmailFocus,\n                })}>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <i className='tim-icons icon-email-85' />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  placeholder='Email'\n                  type='email'\n                  onFocus={(e) => setCreateAccountEmailFocus(true)}\n                  onBlur={(e) => setCreateAccountEmailFocus(false)}\n                />\n              </InputGroup>\n            </FormGroup>\n            <FormGroup className='has-danger'>\n              <InputGroup\n                className={classnames('input-group-alternative', {\n                  'input-group-focus': createAccountPasswordFocus,\n                })}>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <i className='tim-icons icon-key-25' />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  placeholder='Password'\n                  type='password'\n                  onFocus={(e) => setCreateAccountPasswordFocus(true)}\n                  onBlur={(e) => setCreateAccountPasswordFocus(false)}\n                />\n              </InputGroup>\n            </FormGroup>\n            <FormGroup className='has-danger'>\n              <InputGroup\n                className={classnames('input-group-alternative', {\n                  'input-group-focus': createAccountRetypePasswordFocus,\n                })}>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText>\n                    <i className='tim-icons icon-key-25' />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  placeholder='Retype Password'\n                  type='password'\n                  onFocus={(e) => setCreateAccountRetypePasswordFocus(true)}\n                  onBlur={(e) => setCreateAccountRetypePasswordFocus(false)}\n                />\n              </InputGroup>\n            </FormGroup>\n            <FormGroup check className='mt-3'>\n              <Label check>\n                <Input defaultChecked type='checkbox' />\n                <span className='form-check-sign' />\n                Remember me!\n              </Label>\n            </FormGroup>\n            <div className='text-center'>\n              <Button className='my-4' color='primary' type='button'>\n                Sign in\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Modal>\n    </Navbar>\n  );\n}\n","/Users/chen2886/Desktop/MusicMarkdown/frontend/src/Syntax.js",[],"/Users/chen2886/Desktop/MusicMarkdown/frontend/src/OpenSheetDisplay.jsx",["50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":3,"column":24,"nodeType":"59","messageId":"60","endLine":3,"endColumn":34},{"ruleId":"57","severity":1,"message":"62","line":3,"column":58,"nodeType":"59","messageId":"60","endLine":3,"endColumn":67},{"ruleId":"57","severity":1,"message":"63","line":3,"column":69,"nodeType":"59","messageId":"60","endLine":3,"endColumn":82},{"ruleId":"57","severity":1,"message":"64","line":3,"column":84,"nodeType":"59","messageId":"60","endLine":3,"endColumn":93},{"ruleId":"53","replacedBy":"65"},{"ruleId":"55","replacedBy":"66"},{"ruleId":"57","severity":1,"message":"67","line":19,"column":10,"nodeType":"59","messageId":"60","endLine":19,"endColumn":14},{"ruleId":"57","severity":1,"message":"68","line":21,"column":18,"nodeType":"59","messageId":"60","endLine":21,"endColumn":25},{"ruleId":"57","severity":1,"message":"69","line":21,"column":27,"nodeType":"59","messageId":"60","endLine":21,"endColumn":34},{"ruleId":"57","severity":1,"message":"70","line":21,"column":36,"nodeType":"59","messageId":"60","endLine":21,"endColumn":39},{"ruleId":"57","severity":1,"message":"71","line":18,"column":3,"nodeType":"59","messageId":"60","endLine":18,"endColumn":22},{"ruleId":"57","severity":1,"message":"72","line":19,"column":3,"nodeType":"59","messageId":"60","endLine":19,"endColumn":14},{"ruleId":"57","severity":1,"message":"73","line":20,"column":3,"nodeType":"59","messageId":"60","endLine":20,"endColumn":16},{"ruleId":"57","severity":1,"message":"74","line":27,"column":3,"nodeType":"59","messageId":"60","endLine":27,"endColumn":23},{"ruleId":"75","severity":1,"message":"76","line":36,"column":8,"nodeType":"77","endLine":36,"endColumn":10,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":47,"column":16,"nodeType":"80","endLine":47,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":65,"column":8,"nodeType":"77","endLine":65,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.",["82"],["83"],"'Link' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'UncontrolledPopover' is defined but never used.","'PopoverBody' is defined but never used.","'PopoverHeader' is defined but never used.","'UncontrolledCarousel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resize'. Either include it or remove the dependency array.","ArrayExpression",["84"],"Assignments to the 'osmd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"86","fix":"88"},"Update the dependencies array to be: [resize]",{"range":"89","text":"90"},{"range":"91","text":"90"},[1020,1022],"[resize]",[1783,1785]]