[{"/Users/chen2886/Desktop/MusicMarkdown/Composer/src/index.js":"1","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/LandingPage.js":"2","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/Footer.js":"3","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/ExamplesNavbar.js":"4","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/Syntax.js":"5","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/parser.js":"6","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/OpenSheetDisplay.jsx":"7","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/evaluate.js":"8"},{"size":981,"mtime":1618111967266,"results":"9","hashOfConfig":"10"},{"size":32596,"mtime":1618149419753,"results":"11","hashOfConfig":"10"},{"size":1721,"mtime":1618132741559,"results":"12","hashOfConfig":"10"},{"size":17091,"mtime":1618146099095,"results":"13","hashOfConfig":"10"},{"size":4987,"mtime":1618142201111,"results":"14","hashOfConfig":"10"},{"size":10504,"mtime":1618146099096,"results":"15","hashOfConfig":"10"},{"size":4414,"mtime":1618145422978,"results":"16","hashOfConfig":"10"},{"size":22278,"mtime":1618146099095,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ofr3bj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":65,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/chen2886/Desktop/MusicMarkdown/Composer/src/index.js",[],["40","41"],"/Users/chen2886/Desktop/MusicMarkdown/Composer/src/LandingPage.js",["42","43","44","45","46","47","48","49","50","51","52"],"import React, { useRef, useState, Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  ListGroupItem,\n  ListGroup,\n  Container,\n  Row,\n  Col,\n  Modal,\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from 'reactstrap';\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport CustomRule from './Syntax';\nimport OpenSheetDisplay from './OpenSheetDisplay';\nimport ExamplesNavbar from './ExamplesNavbar.js';\nimport Footer from './Footer.js';\nimport axios from 'axios';\nimport classnames from 'classnames';\nimport { OpenSheetMusicDisplay as OSMD } from 'opensheetmusicdisplay';\n// import html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\n\nimport './assets/scss/blk-design-system-react.scss?v=1.2.0';\nimport './assets/demo/demo.css';\nimport './assets/css/nucleo-icons.css';\n\nimport { parse_and_evaluate } from './parser';\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log('Page Rerendered');\n    localStorage.removeItem('parsedResult');\n    this.rerender = this.rerender.bind(this);\n    this.state = {\n      sheetContent: '',\n      editorContent: '',\n      twoNewLine: false,\n      saveFileModal: false,\n      fileName: '',\n      fileNameFocus: false,\n      loggedIn: false,\n      openAlert: false,\n      alertMessage: '',\n      alertSeverity: '',\n      selectFileModal: false,\n      FileList: [],\n      selectedFileName: '',\n      showMusicSheet: true,\n    };\n  }\n\n  shouldComponentUpdate() {\n    if (localStorage.getItem('loginInfo')) {\n      console.log(JSON.parse(localStorage.getItem('loginInfo')));\n    }\n    return false;\n  }\n\n  rerender() {\n    console.log('rerender');\n    console.log(localStorage.getItem('loginInfo'));\n    if (localStorage.getItem('loginInfo')) {\n      this.setState({ loggedIn: true });\n    }\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    const customRule = new CustomRule();\n    this.refs.aceEditor.editor.getSession().setMode(customRule);\n    this.refs.aceEditor.editor.setAutoScrollEditorIntoView(true);\n    this.refs.aceEditor.editor.commands.on('afterExec', (eventData) => {\n      if (eventData.command.name === 'insertstring') {\n        if (eventData.args === '\\n') {\n          if (this.state.twoNewLine === true) {\n            this.setState({ twoNewLine: false }, () => {\n              this.refreshSheet();\n            });\n          } else {\n            this.setState({ twoNewLine: true });\n          }\n        } else {\n          this.setState({ twoNewLine: false });\n        }\n      }\n    });\n  }\n\n  editorOnChange(e) {\n    this.setState({ editorContent: e });\n  }\n\n  refreshSheet() {\n    console.log('Refreshing music sheet');\n    this.setState({ showMusicSheet: true });\n    try {\n      var parsed = parse_and_evaluate(this.state.editorContent);\n      // console.log(parsed);\n      if (!parsed.startsWith('<?xml')) return;\n      // this.setState({ sheetContent: '' }, () => {\n      this.setState({ sheetContent: parsed }, () => {\n        console.log('updating page');\n        this.forceUpdate();\n      });\n      // });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  retrieveFileList() {\n    var email = JSON.parse(localStorage.getItem('loginInfo')).email;\n    console.log(JSON.parse(localStorage.getItem('loginInfo')));\n    axios\n      .get('http://localhost:8080/getFile', { params: { username: email, fileName: '' } })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({ FileList: res.data.files, selectedFileName: res.data.files[0] }, () => this.forceUpdate());\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  saveFile() {\n    console.log(this.state);\n    console.log(this.state.fileName);\n    console.log(this.state.editorContent);\n    var email = JSON.parse(localStorage.getItem('loginInfo')).email;\n    console.log(JSON.parse(localStorage.getItem('loginInfo')));\n\n    axios\n      .post('http://localhost:8080/save', { data: this.state.editorContent }, { params: { username: email, fileName: this.state.fileName } })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({ saveFileModal: false, showMusicSheet: true });\n        this.forceUpdate();\n      })\n      .catch((err) => {\n        console.log(err.message);\n        this.setState({ showMusicSheet: true });\n      });\n  }\n\n  retrieveFile() {\n    console.log(this.state.selectedFileName);\n    var email = JSON.parse(localStorage.getItem('loginInfo')).email;\n    console.log(JSON.parse(localStorage.getItem('loginInfo')));\n    axios\n      .get('http://localhost:8080/getFile', { params: { username: email, fileName: this.state.selectedFileName } })\n      .then((res) => {\n        console.log(res.data);\n        this.setState({ editorContent: res.data, selectFileModal: false }, () => this.forceUpdate());\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }\n\n  downloadSheet() {\n    let saveSvg = function(svgEl, name) {\n      svgEl.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n      var svgData = svgEl.outerHTML;\n      var preface = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n';\n      var svgBlob = new Blob([preface, svgData], {type:\"image/svg+xml;charset=utf-8\"});\n      var svgUrl = URL.createObjectURL(svgBlob);\n      // return svgUrl;\n      var downloadLink = document.createElement(\"a\");\n      downloadLink.href = svgUrl;\n      downloadLink.download = name;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n    let svgElem = document.getElementById(\"osmdSvgPage1\");\n    saveSvg(svgElem,\"mysheetmusic.svg\");\n  }\n\n  changeSelected(e) {\n    this.setState({ selectedFileName: e.target.value });\n  }\n\n  openModal() {\n    this.setState({ saveFileModal: true, showMusicSheet: false });\n    console.log(this.state.saveFileModal);\n    this.forceUpdate();\n  }\n\n  render() {\n    const { editorContent, sheetContent, saveFileModal, fileName, fileNameFocus } = this.state;\n    return (\n      <>\n        <ExamplesNavbar render={this.rerender} />\n        <div className='wrapper'>\n          <div className='page-header'>\n            {/* <img alt='...' className='path' src={require('./assets/img/blob.png').default} /> */}\n            {/* <img alt='...' className='path2' src={require('./assets/img/path2.png').default} /> */}\n            <img alt='...' className='shapes triangle' src={require('./img/triunghiuri.png').default} />\n            {/* <img alt='...' className='shapes wave' src={require('./assets/img/waves.png').default} /> */}\n            {/* <img alt='...' className='shapes squares' src={require('./assets/img/patrat.png').default} /> */}\n            {/* <img alt='...' className='shapes circle' src={require('./assets/img/cercuri.png').default} /> */}\n            <div className='content-center'>\n              <Row className='row-grid justify-content-between align-items-center text-left'>\n                <Col lg='6' md='6'>\n                  <h1 className='text-white'>\n                    We make generating sheet music <br />\n                    <span className='text-white'>easy</span>\n                  </h1>\n                  <p className='text-white mb-3'>Compose without worries.</p>\n                  {/* <div className='btn-wrapper mb-3'>\n                  <p className='category text-success d-inline'>From 9.99%/mo</p>\n                  <Button className='btn-link' color='success' href='#pablo' onClick={(e) => e.preventDefault()} size='sm'>\n                    <i className='tim-icons icon-minimal-right' />\n                  </Button>\n                </div> */}\n                  <div className='btn-wrapper'>\n                    <div className='button-container'>\n                      <Button className='btn-icon btn-simple btn-round btn-neutral' color='default' href='https://github.com/lu656/MusicMarkdown'>\n                        <i className='fab fa-github' />\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n                <Col lg='4' md='5'>\n                  <img alt='...' className='img-fluid' src={require('./assets/img/composem.png').default} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n          <section className='section section-lg'>\n            <img alt='...' className='path' src={require('./assets/img/path4.png').default} />\n            {/* <img alt='...' className='path2' src={require('./assets/img/path5.png').default} /> */}\n            {/* <img alt='...' className='path3' src={require('./assets/img/path2.png').default} /> */}\n            <Container>\n              <Row className='justify-content-center'>\n                <Col lg='12'>\n                  <h1 className='text-center'>About Composem</h1>\n                  <Row className='row-grid justify-content-center'>\n                    <Col lg='3'>\n                      <div className='info'>\n                        <div className='icon icon-primary'>\n                          <i className='tim-icons icon-money-coins' />\n                        </div>\n                        <h4 className='info-title'>Free</h4>\n                        <hr className='line-primary' />\n                        <p>Composem's features are not locked behind a paywall. We hope to encourage more aspiring musicians this way</p>\n                      </div>\n                    </Col>\n                    <Col lg='3'>\n                      <div className='info'>\n                        <div className='icon icon-warning'>\n                          <i className='tim-icons icon-app' />\n                        </div>\n                        <h4 className='info-title'>Easy to Learn</h4>\n                        <hr className='line-warning' />\n                        <p>\n                          Unlike most other music sheet software, Composem is designed to be minimal and intuitive. It takes inspiration from other markdown\n                          languages, meaning that users have more power to create sheet music without a steep learning curve \n                        </p>\n                      </div>\n                    </Col>\n                    <Col lg='3'>\n                      <div className='info'>\n                        <div className='icon icon-success'>\n                          <i className='tim-icons icon-globe-2' />\n                        </div>\n                        <h4 className='info-title'>Accessible</h4>\n                        <hr className='line-success' />\n                        <p>\n                          With the power of Google Cloud, users can save their projects online, meaning that they can access then whenever, wherever they are.\n                          This eliminates the restriction of having only one device that is capable of creating sheet music\n                        </p>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n          <section className='section section-lg section-coins'>\n            <img alt='...' className='path' src={require('./assets/img/path3.png').default} />\n            <div style={{ margin: '5rem' }}>\n              <Row>\n                <Col md='4'>\n                  <hr className='line-info' />\n                  <h1>\n                    {/* Choose the coin  */}\n                    Start generating <span className='text-info'>music sheets</span>\n                  </h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col md='12' lg='6'>\n                  <Card className='card-coin card-plain'>\n                    {/* <CardHeader>\n                    <img alt='...' className='img-center img-fluid' src={require('./assets/img/bitcoin.png').default} />\n                  </CardHeader> */}\n                    <CardBody>\n                      <Row style={{ height: '75vh', padding: '1rem' }}>\n                        <AceEditor\n                          ref='aceEditor'\n                          mode='text'\n                          theme='monokai'\n                          width='100%'\n                          height='75vh'\n                          value={editorContent}\n                          onChange={(e) => this.editorOnChange(e)}\n                          on\n                          wrapEnabled\n                          editorProps={{ $blockScrolling: true }}\n                          setOptions={{\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 4,\n                            showPrintMargin: false,\n                            hScrollBarAlwaysVisible: true,\n                            vScrollBarAlwaysVisible: true,\n                          }}\n                          fontSize={18}\n                        />\n                      </Row>\n                    </CardBody>\n\n                    <CardFooter className='text-center'>\n                      <Button className='btn-simple' disabled={!this.state.loggedIn} color='primary' onClick={() => this.openModal()}>\n                        Save to Cloud\n                      </Button>\n                      <Button\n                        className='btn-simple'\n                        disabled={!this.state.loggedIn}\n                        color='primary'\n                        onClick={() => {\n                          this.retrieveFileList();\n                          this.setState({ selectFileModal: true });\n                          this.forceUpdate();\n                        }}>\n                        Select file from cloud\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n                <Col md='12' lg='6'>\n                  <Card className='card-coin card-plain'>\n                    {/* <CardHeader>\n                    <img alt='...' className='img-center img-fluid' src={require('./assets/img/etherum.png').default} />\n                  </CardHeader> */}\n                    <CardBody>\n                      <Row style={{ height: '75vh', padding: '1rem' }}>\n                        <div style={{ background: '#fff', width: '100%', height: '75vh', overflow: 'auto' }}>\n                          {/* <OpenSheetMusicDisplay file={'MuzioClementi_SonatinaOpus36No1_Part2.xml'} /> */}\n                          {this.state.showMusicSheet && <OpenSheetDisplay id='musicSheetSVG' content={sheetContent} />}\n                        </div>\n                      </Row>\n                    </CardBody>\n                    <CardFooter className='text-center'>\n                      <Button className='btn-simple' color='success' onClick={() => this.refreshSheet()}>\n                        Refresh\n                      </Button>\n                      <Button className='btn-simple' color='success' onClick={() => this.downloadSheet()}>\n                        Download\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </section>\n          <Footer />\n        </div>\n        <Modal\n          modalClassName='modal-black'\n          isOpen={this.state.saveFileModal}\n          toggle={() => {\n            this.setState({ saveFileModal: false });\n            this.forceUpdate();\n          }}>\n          <div className='modal-header justify-content-center'>\n            <button\n              className='close'\n              onClick={() => {\n                this.setState({ saveFileModal: false });\n                this.forceUpdate();\n              }}>\n              <i className='tim-icons icon-simple-remove' />\n            </button>\n            <h4 className='title title-up'>Save file to cloud</h4>\n          </div>\n          <div className='modal-body'>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': this.state.fileNameFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-cloud-upload-94' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='File Name'\n                    type='name'\n                    onFocus={(e) => {\n                      this.setState({ fileNameFocus: true });\n                      this.forceUpdate();\n                    }}\n                    onBlur={(e) => {\n                      this.setState({ fileNameFocus: false });\n                      this.forceUpdate();\n                    }}\n                    value={this.state.fileName}\n                    onChange={(e) => {\n                      this.setState({ fileName: e.target.value });\n                      this.forceUpdate();\n                    }}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className='text-center'>\n                <Button className='my-4' color='primary' type='button' onClick={() => this.saveFile()}>\n                  Save\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </Modal>\n        <Modal\n          modalClassName='modal-black'\n          isOpen={this.state.selectFileModal}\n          toggle={() => {\n            this.setState({ selectFileModal: false });\n            this.forceUpdate();\n          }}>\n          <div className='modal-header justify-content-center'>\n            <button\n              className='close'\n              onClick={() => {\n                this.setState({ selectFileModal: false });\n                this.forceUpdate();\n              }}>\n              <i className='tim-icons icon-simple-remove' />\n            </button>\n            <h4 className='title title-up'>Select file from cloud</h4>\n          </div>\n          <div className='modal-body'>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup>\n                  <div style={{ width: '100%', padding: '1rem' }}>\n                    <select class='form-control' id='exampleFormControlSelect1' onChange={this.changeSelected.bind(this)}>\n                      {this.state.FileList.map((file) => (\n                        <option style={{ color: 'black' }}>{file}</option>\n                      ))}\n                    </select>\n                  </div>\n                </InputGroup>\n              </FormGroup>\n              <div className='text-center'>\n                <Button className='my-4' color='primary' type='button' onClick={() => this.retrieveFile()}>\n                  Retrieve\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default LandingPage;\n\n// function LandingPageDeprecated() {\n//   const aceEditor = useRef();\n//   const [refreshDisplayState, setDisplayState] = useState(0);\n//   const [content, setContent] = useState('');\n//   React.useEffect(() => {\n//     console.log('useEffect called');\n//     localStorage.removeItem('parsedResult');\n//     document.body.classList.toggle('landing-page');\n//     const customRule = new CustomRule();\n//     const editor = aceEditor.current;\n//     editor.editor.getSession().setMode(customRule);\n//     editor.editor.setAutoScrollEditorIntoView(true);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       document.body.classList.toggle('landing-page');\n//     };\n//   }, []);\n\n//   var openSheetDisplayRefresh = () => {\n//     console.log(content);\n//     console.log('refresh');\n//     try {\n//       var parsed = parse_and_evaluate(content);\n//       localStorage.removeItem('parsedResult');\n//       localStorage.setItem('parsedResult', parsed);\n//       setDisplayState(refreshDisplayState + 1);\n//     } catch (error) {}\n//   };\n\n//   var onChange = (value) => {\n//     setContent(value);\n//   };\n\n//   return (\n//     <>\n//       <ExamplesNavbar />\n//       <div className='wrapper'>\n//         <div className='page-header'>\n//           <img alt='...' className='path' src={require('./assets/img/blob.png').default} />\n//           <img alt='...' className='path2' src={require('./assets/img/path2.png').default} />\n//           <img alt='...' className='shapes triangle' src={require('./assets/img/triunghiuri.png').default} />\n//           <img alt='...' className='shapes wave' src={require('./assets/img/waves.png').default} />\n//           <img alt='...' className='shapes squares' src={require('./assets/img/patrat.png').default} />\n//           <img alt='...' className='shapes circle' src={require('./assets/img/cercuri.png').default} />\n//           <div className='content-center'>\n//             <Row className='row-grid justify-content-between align-items-center text-left'>\n//               <Col lg='6' md='6'>\n//                 <h1 className='text-white'>\n//                   We make generating sheet music <br />\n//                   <span className='text-white'>easy</span>\n//                 </h1>\n//                 <p className='text-white mb-3'>Place Holder</p>\n//                 {/* <div className='btn-wrapper mb-3'>\n//                   <p className='category text-success d-inline'>From 9.99%/mo</p>\n//                   <Button className='btn-link' color='success' href='#pablo' onClick={(e) => e.preventDefault()} size='sm'>\n//                     <i className='tim-icons icon-minimal-right' />\n//                   </Button>\n//                 </div> */}\n//                 <div className='btn-wrapper'>\n//                   <div className='button-container'>\n//                     <Button className='btn-icon btn-simple btn-round btn-neutral' color='default' href='https://github.com'>\n//                       <i className='fab fa-github' />\n//                     </Button>\n//                   </div>\n//                 </div>\n//               </Col>\n//               <Col lg='4' md='5'>\n//                 <img alt='...' className='img-fluid' src={require('./assets/img/etherum.png').default} />\n//               </Col>\n//             </Row>\n//           </div>\n//         </div>\n//         <section className='section section-lg'>\n//           <img alt='...' className='path' src={require('./assets/img/path4.png').default} />\n//           {/* <img alt='...' className='path2' src={require('./assets/img/path5.png').default} /> */}\n//           {/* <img alt='...' className='path3' src={require('./assets/img/path2.png').default} /> */}\n//           <Container>\n//             <Row className='justify-content-center'>\n//               <Col lg='12'>\n//                 <h1 className='text-center'>Your best benefit</h1>\n//                 <Row className='row-grid justify-content-center'>\n//                   <Col lg='3'>\n//                     <div className='info'>\n//                       <div className='icon icon-primary'>\n//                         <i className='tim-icons icon-money-coins' />\n//                       </div>\n//                       <h4 className='info-title'>Low Commission</h4>\n//                       <hr className='line-primary' />\n//                       <p>Divide details about your work into parts. Write a few lines about each one. A paragraph describing a feature will.</p>\n//                     </div>\n//                   </Col>\n//                   <Col lg='3'>\n//                     <div className='info'>\n//                       <div className='icon icon-warning'>\n//                         <i className='tim-icons icon-chart-pie-36' />\n//                       </div>\n//                       <h4 className='info-title'>High Incomes</h4>\n//                       <hr className='line-warning' />\n//                       <p>\n//                         Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing feature\n//                         will be a feature.\n//                       </p>\n//                     </div>\n//                   </Col>\n//                   <Col lg='3'>\n//                     <div className='info'>\n//                       <div className='icon icon-success'>\n//                         <i className='tim-icons icon-single-02' />\n//                       </div>\n//                       <h4 className='info-title'>Verified People</h4>\n//                       <hr className='line-success' />\n//                       <p>\n//                         Divide details about your product or agency work into parts. Write a few lines about each one. A paragraph describing be\n//                         enough.\n//                       </p>\n//                     </div>\n//                   </Col>\n//                 </Row>\n//               </Col>\n//             </Row>\n//           </Container>\n//         </section>\n//         <section className='section section-lg section-coins'>\n//           <img alt='...' className='path' src={require('./assets/img/path3.png').default} />\n//           <div style={{ margin: '5rem' }}>\n//             <Row>\n//               <Col md='4'>\n//                 <hr className='line-info' />\n//                 <h1>\n//                   {/* Choose the coin  */}\n//                   Start generating <span className='text-info'>music sheet</span>\n//                 </h1>\n//               </Col>\n//             </Row>\n//             <Row>\n//               <Col md='12' lg='6'>\n//                 <Card className='card-coin card-plain'>\n//                   {/* <CardHeader>\n//                     <img alt='...' className='img-center img-fluid' src={require('./assets/img/bitcoin.png').default} />\n//                   </CardHeader> */}\n//                   <CardBody>\n//                     <Row style={{ height: '75vh', padding: '1rem' }}>\n//                       <AceEditor\n//                         ref={aceEditor}\n//                         mode='text'\n//                         theme='monokai'\n//                         width='100%'\n//                         height='75vh'\n//                         onChange={onChange}\n//                         wrapEnabled\n//                         editorProps={{ $blockScrolling: true }}\n//                         setOptions={{\n//                           enableSnippets: false,\n//                           showLineNumbers: true,\n//                           tabSize: 4,\n//                           showPrintMargin: false,\n//                           hScrollBarAlwaysVisible: true,\n//                           vScrollBarAlwaysVisible: true,\n//                         }}\n//                         fontSize={18}\n//                       />\n//                     </Row>\n//                   </CardBody>\n//                   <CardFooter className='text-center'>\n//                     <Button className='btn-simple' color='primary' onClick={() => this.setState({})})}>\n//                       Save to Cloud\n//                     </Button>\n//                   </CardFooter>\n//                 </Card>\n//               </Col>\n//               <Col md='12' lg='6'>\n//                 <Card className='card-coin card-plain'>\n//                   {/* <CardHeader>\n//                     <img alt='...' className='img-center img-fluid' src={require('./assets/img/etherum.png').default} />\n//                   </CardHeader> */}\n//                   <CardBody>\n//                     <Row style={{ height: '75vh', padding: '1rem' }}>\n//                       <div style={{ background: '#fff', width: '100%', height: '75vh', overflow: 'auto' }}>\n//                         {/* <OpenSheetMusicDisplay file={'MuzioClementi_SonatinaOpus36No1_Part2.xml'} /> */}\n//                         <OpenSheetDisplay key={refreshDisplayState} file={'music.xml'} />\n//                       </div>\n//                     </Row>\n//                   </CardBody>\n//                   <CardFooter className='text-center'>\n//                     <Button className='btn-simple' color='success' onClick={openSheetDisplayRefresh}>\n//                       Refresh\n//                     </Button>\n//                   </CardFooter>\n//                 </Card>\n//               </Col>\n//             </Row>\n//           </div>\n//         </section>\n//         <Footer />\n//         <Modal modalClassName='modal-black' isOpen={saveFileModal} toggle={() => setCreateAccountModal(false)}>\n//           <div className='modal-header justify-content-center'>\n//             <button className='close' onClick={() => setCreateAccountModal(false)}>\n//               <i className='tim-icons icon-simple-remove' />\n//             </button>\n//             <h4 className='title title-up'>Create account with email</h4>\n//           </div>\n//           <div className='modal-body'>\n//             <Form role='form'>\n//               <FormGroup className='mb-3'>\n//                 <InputGroup\n//                   className={classnames('input-group-alternative', {\n//                     'input-group-focus': createAccountEmailFocus,\n//                   })}>\n//                   <InputGroupAddon addonType='prepend'>\n//                     <InputGroupText>\n//                       <i className='tim-icons icon-email-85' />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input\n//                     placeholder='Email'\n//                     type='email'\n//                     onFocus={(e) => setCreateAccountEmailFocus(true)}\n//                     onBlur={(e) => setCreateAccountEmailFocus(false)}\n//                     value={createAccountEmail}\n//                     onChange={(e) => setCreateAccountEmail(e.target.value)}\n//                   />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup className={retypeCorrect ? 'has-danger mb-3' : 'mb-3'}>\n//                 <InputGroup\n//                   className={classnames('input-group-alternative', {\n//                     'input-group-focus': createAccountPasswordFocus,\n//                   })}>\n//                   <InputGroupAddon addonType='prepend'>\n//                     <InputGroupText>\n//                       <i className='tim-icons icon-key-25' />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input\n//                     placeholder='Password'\n//                     type='password'\n//                     onFocus={(e) => {\n//                       setCreateAccountPasswordFocus(true);\n//                       setRetypeCorrect(false);\n//                     }}\n//                     onBlur={(e) => setCreateAccountPasswordFocus(false)}\n//                     value={createAccountPassword}\n//                     onChange={(e) => setCreateAccountPassword(e.target.value)}\n//                   />\n//                 </InputGroup>\n//               </FormGroup>\n//               <FormGroup className={retypeCorrect ? 'has-danger mb-3' : 'mb-3'}>\n//                 <InputGroup\n//                   className={classnames('input-group-alternative', {\n//                     'input-group-focus': createAccountRetypePasswordFocus,\n//                   })}>\n//                   <InputGroupAddon addonType='prepend'>\n//                     <InputGroupText>\n//                       <i className='tim-icons icon-key-25' />\n//                     </InputGroupText>\n//                   </InputGroupAddon>\n//                   <Input\n//                     placeholder='Retype Password'\n//                     type='password'\n//                     onFocus={(e) => {\n//                       setCreateAccountRetypePasswordFocus(true);\n//                       setRetypeCorrect(false);\n//                     }}\n//                     onBlur={(e) => setCreateAccountRetypePasswordFocus(false)}\n//                     value={createAccountRetypePassword}\n//                     onChange={(e) => setCreateAccountRetypePassword(e.target.value)}\n//                   />\n//                 </InputGroup>\n//               </FormGroup>\n//               <div className='text-center'>\n//                 <Button className='my-4' color='primary' type='button' onClick={createAccount}>\n//                   Create Account\n//                 </Button>\n//               </div>\n//             </Form>\n//           </div>\n//         </Modal>\n//       </div>\n//     </>\n//   );\n// }\n","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/Footer.js",["53","54","55","56"],"/*!\n\n=========================================================\n* BLK Design System React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// reactstrap components\nimport { Button, NavItem, NavLink, Nav, Container, Row, Col, UncontrolledTooltip } from 'reactstrap';\n\nexport default function Footer() {\n  return (\n    <footer className='footer'>\n      <Container>\n        <Row>\n          <Col md='3'>\n            <h1 className='title'>Composem</h1>\n          </Col>\n          <Col md='6'></Col>\n          <Col md='3'>\n            <h3 className='title'>Follow us:</h3>\n            <div className='btn-wrapper profile'>\n              <Button\n                className='btn-icon btn-neutral btn-round btn-simple'\n                color='default'\n                href='https://www.github.com'\n                id='tooltip230450801'\n                target='_blank'>\n                <i className='fab fa-github-square' />\n              </Button>\n              <UncontrolledTooltip delay={0} target='tooltip230450801'>\n                Check out our repo\n              </UncontrolledTooltip>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/ExamplesNavbar.js",["57","58"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport {\n  Button,\n  Collapse,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  Modal,\n  FormGroup,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Label,\n} from 'reactstrap';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport sha256 from 'js-sha256';\nimport axios from 'axios';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport default function ExamplesNavbar(props) {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [collapseOut, setCollapseOut] = React.useState('');\n  const [color, setColor] = React.useState('navbar-transparent');\n  const [signInFormModal, setsignInFormModal] = React.useState(false);\n  const [signInEmailFocus, setSignInEmailFocus] = React.useState(false);\n  const [signInPasswordFocus, setSignInPasswordFocus] = React.useState(false);\n\n  const [createAccountModal, setCreateAccountModal] = React.useState(false);\n  const [createAccountEmailFocus, setCreateAccountEmailFocus] = React.useState(false);\n  const [createAccountPasswordFocus, setCreateAccountPasswordFocus] = React.useState(false);\n  const [createAccountRetypePasswordFocus, setCreateAccountRetypePasswordFocus] = React.useState(false);\n\n  const [signInEmail, setSignInEmail] = React.useState('');\n  const [signInPassword, setSignInPassword] = React.useState('');\n\n  const [createAccountEmail, setCreateAccountEmail] = React.useState('');\n  const [createAccountPassword, setCreateAccountPassword] = React.useState('');\n  const [createAccountRetypePassword, setCreateAccountRetypePassword] = React.useState('');\n\n  const [retypeCorrect, setRetypeCorrect] = React.useState(false);\n  const [remember, setRemember] = React.useState(false);\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const [alertSeverity, setAlertSeverity] = React.useState('success');\n  const [alertMessage, setAlertMessage] = React.useState('error');\n\n  const [loginSuccess, setLoginSuccess] = React.useState(false);\n  const [loginInfo, setLoginInfo] = React.useState({});\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', changeColor);\n\n    const itemStr = localStorage.getItem('loginInfo');\n    // if the item doesn't exist, return null\n    if (itemStr) {\n      const item = JSON.parse(itemStr);\n      const now = new Date();\n      // compare the expiry time of the item with the current time\n      if (now.getTime() > item.expiry) {\n        // If the item is expired, delete the item from storage\n        // and return null\n        localStorage.removeItem('loginInfo');\n        return null;\n      }\n      setLoginInfo(item);\n      props.render();\n      setLoginSuccess(true);\n    }\n\n    return function cleanup() {\n      window.removeEventListener('scroll', changeColor);\n    };\n  }, []);\n\n  const changeColor = () => {\n    if (document.documentElement.scrollTop > 99 || document.body.scrollTop > 99) {\n      setColor('bg-info');\n    } else if (document.documentElement.scrollTop < 100 || document.body.scrollTop < 100) {\n      setColor('navbar-transparent');\n    }\n  };\n\n  const createAccount = () => {\n    console.log(createAccountEmail);\n    console.log(createAccountPassword);\n    console.log(createAccountRetypePassword);\n\n    if (createAccountEmail.length === 0) {\n      setAlertMessage('Failed create account. Email required.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n\n    if (createAccountPassword.length === 0) {\n      setAlertMessage('Failed create account. Password required.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n\n    if (createAccountRetypePassword.length === 0) {\n      setAlertMessage('Failed create account. Retype empty.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n\n    if (createAccountPassword === createAccountRetypePassword) setRetypeCorrect(true);\n    else {\n      setAlertMessage('Failed create account. Passwords mismatch.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n    axios\n      .get('http://localhost:8080/createAccount', { params: { email: createAccountEmail, password: sha256(createAccountPassword) } })\n      .then((res) => {\n        console.log(res.data);\n        setAlertMessage('Successfully created account.');\n        setAlertSeverity('success');\n        setOpenAlert(true);\n        setCreateAccountModal(false);\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setAlertMessage('Username already exists.');\n        setAlertSeverity('error');\n        setOpenAlert(true);\n      });\n  };\n\n  const signIn = () => {\n    console.log(signInEmail);\n    console.log(signInPassword);\n    console.log(remember);\n\n    if (signInEmail.length === 0) {\n      setAlertMessage('Failed login. Email required.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n\n    if (signInPassword.length === 0) {\n      setAlertMessage('Failed login. Password required.');\n      setAlertSeverity('error');\n      setOpenAlert(true);\n      return;\n    }\n\n    axios\n      .get('http://localhost:8080/login', { params: { email: signInEmail, password: sha256(signInPassword) } })\n      .then((res) => {\n        console.log(res.data);\n        setLoginInfo({\n          email: signInEmail,\n          password: sha256(signInPassword),\n        });\n\n        setAlertMessage('Successful login');\n        setAlertSeverity('success');\n        setOpenAlert(true);\n        setsignInFormModal(false);\n        setLoginSuccess(true);\n        const now = new Date();\n\n        if (remember) {\n          const item = {\n            email: signInEmail,\n            password: sha256(signInPassword),\n            expiry: now.getTime() + 86400000,\n          };\n          localStorage.setItem('loginInfo', JSON.stringify(item));\n        } else {\n          const item = {\n            email: signInEmail,\n            password: sha256(signInPassword),\n            expiry: now.getTime(),\n          };\n          localStorage.setItem('loginInfo', JSON.stringify(item));\n          setSignInEmail('');\n          setSignInPassword('');\n        }\n        props.render();\n        return;\n      })\n      .catch((err) => {\n        console.log(err.message);\n        setAlertMessage('Invalid username and password.');\n        setAlertSeverity('error');\n        setOpenAlert(true);\n        setLoginSuccess(false);\n        return;\n      });\n  };\n\n  const toggleCollapse = () => {\n    document.documentElement.classList.toggle('nav-open');\n    setCollapseOpen(!collapseOpen);\n  };\n\n  const onCollapseExiting = () => {\n    setCollapseOut('collapsing-out');\n  };\n\n  const onCollapseExited = () => {\n    setCollapseOut('');\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpenAlert(false);\n  };\n\n  return (\n    <>\n      <Navbar className={'fixed-top ' + color} color-on-scroll='100' expand='lg'>\n        <Container>\n          <div className='navbar-translate'>\n            <NavbarBrand to='/' id='navbar-brand' tag={Link}>\n              Composem\n            </NavbarBrand>\n            <UncontrolledTooltip placement='bottom' target='navbar-brand'>\n              Designed to make sheet music accessible to everyone\n            </UncontrolledTooltip>\n            <button aria-expanded={collapseOpen} className='navbar-toggler navbar-toggler' onClick={toggleCollapse}>\n              <span className='navbar-toggler-bar bar1' />\n              <span className='navbar-toggler-bar bar2' />\n              <span className='navbar-toggler-bar bar3' />\n            </button>\n          </div>\n          <Collapse\n            className={'justify-content-end ' + collapseOut}\n            navbar\n            isOpen={collapseOpen}\n            onExiting={onCollapseExiting}\n            onExited={onCollapseExited}>\n            <div className='navbar-collapse-header'>\n              <Row>\n                <Col className='collapse-brand' xs='8'>\n                  <a href='#pablo' onClick={(e) => e.preventDefault()}>\n                    Composem\n                  </a>\n                </Col>\n                <Col className='collapse-close text-right' xs='4'>\n                  <button aria-expanded={collapseOpen} className='navbar-toggler' onClick={toggleCollapse}>\n                    <i className='tim-icons icon-simple-remove' />\n                  </button>\n                </Col>\n              </Row>\n            </div>\n            <Nav navbar>\n              <NavItem className='p-0'>\n                <NavLink data-placement='bottom' href='https://github.com/lu656/MusicMarkdown' rel='noopener noreferrer' target='_blank' title='Check out our GitHub'>\n                  <i className='fab fa-github' />\n                  <p className='d-lg-none d-xl-none'>GitHub</p>\n                </NavLink>\n              </NavItem>\n              {!loginSuccess && (\n                <>\n                  <NavItem>\n                    <Button\n                      className='nav-link d-none d-lg-block'\n                      color='primary'\n                      onClick={() => {\n                        setCreateAccountModal(true);\n                      }}>\n                      <i className='tim-icons icon-spaceship' /> Create an Account\n                    </Button>\n                  </NavItem>\n                  <NavItem>\n                    <Button\n                      className='nav-link d-none d-lg-block'\n                      color='default'\n                      onClick={() => {\n                        setsignInFormModal(true);\n                      }}>\n                      <i className='tim-icons icon-single-02' /> Sign in\n                    </Button>\n                  </NavItem>\n                </>\n              )}\n            </Nav>\n          </Collapse>\n        </Container>\n        <Modal modalClassName='modal-black' isOpen={signInFormModal} toggle={() => setsignInFormModal(false)}>\n          <div className='modal-header justify-content-center'>\n            <button className='close' onClick={() => setsignInFormModal(false)}>\n              <i className='tim-icons icon-simple-remove' />\n            </button>\n            <h4 className='title title-up'>Sign in with email</h4>\n          </div>\n          <div className='modal-body'>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': signInEmailFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-email-85' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Email'\n                    value={signInEmail}\n                    onChange={(e) => setSignInEmail(e.target.value)}\n                    type='email'\n                    onFocus={(e) => setSignInEmailFocus(true)}\n                    onBlur={(e) => setSignInEmailFocus(false)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': signInPasswordFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-key-25' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Password'\n                    type='password'\n                    onFocus={(e) => setSignInPasswordFocus(true)}\n                    onBlur={(e) => setSignInPasswordFocus(false)}\n                    value={signInPassword}\n                    onChange={(e) => setSignInPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup check className='mt-3'>\n                <Label check>\n                  <Input\n                    type='checkbox'\n                    value={remember}\n                    onChange={(e) => {\n                      console.log(e.target.checked);\n                      setRemember(e.target.checked);\n                    }}\n                  />\n                  <span className='form-check-sign' />\n                  Remember me!\n                </Label>\n              </FormGroup>\n              <div className='text-center'>\n                <Button className='my-4' color='primary' type='button' onClick={signIn}>\n                  Sign in\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </Modal>\n        <Modal modalClassName='modal-black' isOpen={createAccountModal} toggle={() => setCreateAccountModal(false)}>\n          <div className='modal-header justify-content-center'>\n            <button className='close' onClick={() => setCreateAccountModal(false)}>\n              <i className='tim-icons icon-simple-remove' />\n            </button>\n            <h4 className='title title-up'>Create account with email</h4>\n          </div>\n          <div className='modal-body'>\n            <Form role='form'>\n              <FormGroup className='mb-3'>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': createAccountEmailFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-email-85' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Email'\n                    type='email'\n                    onFocus={(e) => setCreateAccountEmailFocus(true)}\n                    onBlur={(e) => setCreateAccountEmailFocus(false)}\n                    value={createAccountEmail}\n                    onChange={(e) => setCreateAccountEmail(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup className={retypeCorrect ? 'has-danger mb-3' : 'mb-3'}>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': createAccountPasswordFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-key-25' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Password'\n                    type='password'\n                    onFocus={(e) => {\n                      setCreateAccountPasswordFocus(true);\n                      setRetypeCorrect(false);\n                    }}\n                    onBlur={(e) => setCreateAccountPasswordFocus(false)}\n                    value={createAccountPassword}\n                    onChange={(e) => setCreateAccountPassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <FormGroup className={retypeCorrect ? 'has-danger mb-3' : 'mb-3'}>\n                <InputGroup\n                  className={classnames('input-group-alternative', {\n                    'input-group-focus': createAccountRetypePasswordFocus,\n                  })}>\n                  <InputGroupAddon addonType='prepend'>\n                    <InputGroupText>\n                      <i className='tim-icons icon-key-25' />\n                    </InputGroupText>\n                  </InputGroupAddon>\n                  <Input\n                    placeholder='Retype Password'\n                    type='password'\n                    onFocus={(e) => {\n                      setCreateAccountRetypePasswordFocus(true);\n                      setRetypeCorrect(false);\n                    }}\n                    onBlur={(e) => setCreateAccountRetypePasswordFocus(false)}\n                    value={createAccountRetypePassword}\n                    onChange={(e) => setCreateAccountRetypePassword(e.target.value)}\n                  />\n                </InputGroup>\n              </FormGroup>\n              <div className='text-center'>\n                <Button className='my-4' color='primary' type='button' onClick={createAccount}>\n                  Create Account\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </Modal>\n      </Navbar>\n      <Snackbar open={openAlert} autoHideDuration={4000} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={alertSeverity}>\n          {alertMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/Syntax.js",[],"/Users/chen2886/Desktop/MusicMarkdown/Composer/src/parser.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"import { evaluate } from './evaluate';\n\nvar musicXML =\n'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML 3.1 Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\"><score-partwise version=\"3.1\"><work><work-number>Unknown</work-number><work-title>Untitled</work-title></work><defaults><scaling><millimeters>6.35</millimeters><tenths>40</tenths></scaling><page-layout><page-height>1760</page-height><page-width>1360</page-width><page-margins type=\"both\"><left-margin>80</left-margin><right-margin>80</right-margin><top-margin>80</top-margin><bottom-margin>80</bottom-margin></page-margins></page-layout><system-layout><system-margins><left-margin>0</left-margin><right-margin>0</right-margin></system-margins><system-distance>130</system-distance><top-system-distance>70</top-system-distance></system-layout><staff-layout><staff-distance>80</staff-distance></staff-layout><appearance><line-width type=\"stem\">0.8333</line-width><line-width type=\"beam\">5</line-width><line-width type=\"staff\">1.25</line-width><line-width type=\"light barline\">1.875</line-width><line-width type=\"heavy barline\">5</line-width><line-width type=\"leger\">1.875</line-width><line-width type=\"ending\">1.25</line-width><line-width type=\"wedge\">0.8333</line-width><line-width type=\"enclosure\">1.25</line-width><line-width type=\"tuplet bracket\">0.8333</line-width><note-size type=\"grace\">60</note-size><note-size type=\"cue\">60</note-size><distance type=\"hyphen\">100</distance><distance type=\"beam\">8</distance></appearance><music-font font-family=\"Maestro,engraved\" font-size=\"18\"/><word-font font-family=\"Times New Roman\" font-size=\"9\"/><lyric-font font-family=\"Times New Roman\" font-size=\"10\"/></defaults><part-list></part-list></score-partwise>';\nvar xmlParser = new DOMParser();\nexport var xmlDoc = xmlParser.parseFromString(musicXML, 'application/xml');\n\nconsole.log(musicXML);\n\nfunction isTitle(c) {\n  return /title=[a-zA-Z0-9\\- ]+/.test(c);\n}\n\nfunction isAuthor(c) {\n  return /author=[a-zA-Z0-9\\- ]+/.test(c);\n}\n\nfunction isInstrumentHeader(c) {\n  return /[a-zA-Z0-9 \\-]+\\s*\\{/.test(c);\n}\n\nfunction isInstrumentFooter(c) {\n  return c == '}';\n}\n\nfunction isMeasure(c) {\n  return c[0] == '|';\n}\n\nfunction isMeasureMeta(c) {\n  return /\\$[TB]{1},\\s*[0-9]{1}\\/[0-9]{1},\\s*[ABCDEFG]{1}[b#]{0,1}[mM]{1}\\$/.test(c);\n}\n\nfunction isFutureMeasureMeta(c) {\n  return /\\$[0-9]{1}\\/[0-9]{1},\\s*[ABCDEFG]{1}[b#]{0,1}[mM]{1}\\$/.test(c);\n}\nfunction isNote(c) {\n  return /[-]{0,1}\\([ABCDEFGR]{1}[b#]{0,1},\\s*[0-9]+,\\s*[01]{1},\\s*[a-z0-9]+\\)[-]{0,1}/.test(c);\n}\n\nfunction isRepeat(c) {\n  return c == \":\";\n}\n\nfunction isCrescendo(c) {\n  return /<[0-9]{2}/.test(c);\n}\n\nfunction isDiminuendo(c) {\n  return />[0-9]{2}/.test(c);\n}\n\nfunction isNoteHeader(c) {\n  return c == \"(\";\n}\n\nfunction isNoteFooter(c) {\n  return c == \")\";\n}\n\nfunction isChordHeader(c) {\n  return c == '[';\n}\n\nfunction isChordFooter(c) {\n  return c == ']';\n}\n\n// function isTie(c) {\n//     return c == '-';\n// }\n\nfunction isWhitespace(c) {\n  return /^\\s+$/.test(c);\n}\n\nfunction isNewline(c) {\n  return c == \"\\n\";\n}\n\nfunction getMeasureData(input) {\n  var measureData = [];\n  var c = \"\";\n  var i = 1;\n  var advance = function() { \n      return c = input[++i];\n  };\n  var addToken = function (tokens, lex_obj) {\n      tokens.push(lex_obj);\n      return tokens;\n  };\n\n  var chords = [];\n  var isInChord = false;\n  var isInNote = false;\n\n  while (i < input.length) {\n      // console.log(c);\n      if (input[i] == \" \") {\n          i++;\n          continue;\n      }\n      c += input[i];\n      console.log(c);\n      // if (isWhitespace(c)) {\n      //     // advance();\n      //     if (!isInChord && !isInNote) {\n      //         console.log(\"hit\");\n      //         c = \"\";\n      //     }\n      //     console.log(c);\n      //     i++;\n      // } else \n      \n      if (isMeasureMeta(c)) {\n          measureData = addToken(measureData,{type:\"measureMeta\",value:c});\n          c = \"\";\n          i++;\n          console.log(c);\n      } else if (isFutureMeasureMeta(c)) {\n          measureData = addToken(measureData,{type:\"futureMeasureMeta\",value:c});\n          c = \"\";\n          i++;\n          console.log(c);\n      } else if (isCrescendo(c)) {\n          measureData = addToken(measureData,{type:\"crescendo\",value:c});\n          c = \"\";\n          i++;\n          console.log(c);\n      } else if (isDiminuendo(c)) {\n          measureData = addToken(measureData,{type:\"diminuendo\",value:c});\n          c = \"\";\n          i++;\n          console.log(c);\n      } else if (isRepeat(c)) {\n          measureData = addToken(measureData,{type:\"repeat\",value:c});\n          c = \"\";\n          i++;\n          console.log(c);\n      } else if (isNote(c)) {\n          console.log(\"hit isnote\");\n          if (input[i+1] == \"-\") {\n              c+=input[++i];\n          }\n          if (!isInChord) {\n              measureData = addToken(measureData,{type:\"note\",value:c});\n              // advance();\n              c = \"\";\n              i++;\n              console.log(c);\n          } else {\n              chords = addToken(chords,{type:\"note\",value:/[-]{0,1}\\([ABCDEFGR]{1}[b#]{0,1},\\s*[0-9]+,\\s*[01]{1},\\s*[a-z0-9]+[-]{0,1}\\)/.exec(c)[0]});\n              // advance();\n              c = \"\";\n              i++;\n              isInNote = false;\n              console.log(c);\n\n          }\n      } else if (isChordHeader(c)) {\n          isInChord = true;\n          chords = [];\n          c = \"\";\n          i++;\n      } else if (isChordFooter(c)) {\n          isInChord = false;\n          measureData = addToken(measureData,{type:\"chord\",value:chords});\n          c = \"\";\n          i++;\n      } else {\n          if (isNoteHeader(c)) {\n              console.log(\"hit noteheader\");\n              isInNote = true;\n          }\n          if (isNoteFooter(c)) {\n              console.log(\"hit notefooter\");\n              isInNote = false;\n          }\n          i++;\n      }\n  }\n\n\n  return measureData;\n\n} \n\nfunction lex(input) {\n  var tokens = [];\n  var c = \"\";\n  var i = 0;\n  var advance = function() { \n      return c = input[++i];\n  };\n\n  var addToken = function (tokens, lex_obj) {\n      tokens.push(lex_obj);\n      return tokens;\n  };\n\n  var input_split = input.split(\"\\n\");\n  var measures = [];\n  var measureData = [];\n  var staveNum = 1;\n  var measureNum = 0;\n  var instrument = \"\";\n  var isInInstrument = false;\n\n  for (var i = 0; i < input_split.length; i++) {\n      var line = input_split[i].trim();\n      if (isTitle(line)) {\n          tokens = addToken(tokens,{type:\"title\",value:line});\n      } else if (isAuthor(line)) {\n          tokens = addToken(tokens,{type:\"author\",value:line});\n      } else {\n          if (isInstrumentHeader(line)) {\n              isInInstrument = true;\n              measures = [];\n              measureNum = 1;\n              var staveNum = 0;\n              instrument = /[a-zA-Z]+/.exec(line)[0];\n          } else {\n              if (isMeasure(line)) {\n                  staveNum++;\n                  measureData = getMeasureData(line);\n                  measures = addToken(measures,{type:\"measure\",value:measureData,staveNum:staveNum,measureNum:measureNum});\n              } else if (line==\"\" && isInInstrument == true) {\n                  console.log(\"hit\");\n                  staveNum = 0;\n                  measureNum++;\n              } else if (isInstrumentFooter(line)) {\n                  isInInstrument = false;\n                  tokens = addToken(tokens,{type:\"instrument\",instrument:instrument,value:measures});\n              }\n          }\n      }\n  }\n\n  return tokens;\n\n}\n\nvar glob_tokens;\n\nexport function parse_and_evaluate(str) {\n  musicXML =\n  '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE score-partwise PUBLIC \"-//Recordare//DTD MusicXML 3.1 Partwise//EN\" \"http://www.musicxml.org/dtds/partwise.dtd\"><score-partwise version=\"3.1\"><work><work-number>Unknown</work-number><work-title>Untitled</work-title></work><defaults><scaling><millimeters>6.35</millimeters><tenths>40</tenths></scaling><page-layout><page-height>1760</page-height><page-width>1360</page-width><page-margins type=\"both\"><left-margin>80</left-margin><right-margin>80</right-margin><top-margin>80</top-margin><bottom-margin>80</bottom-margin></page-margins></page-layout><system-layout><system-margins><left-margin>0</left-margin><right-margin>0</right-margin></system-margins><system-distance>130</system-distance><top-system-distance>70</top-system-distance></system-layout><staff-layout><staff-distance>80</staff-distance></staff-layout><appearance><line-width type=\"stem\">0.8333</line-width><line-width type=\"beam\">5</line-width><line-width type=\"staff\">1.25</line-width><line-width type=\"light barline\">1.875</line-width><line-width type=\"heavy barline\">5</line-width><line-width type=\"leger\">1.875</line-width><line-width type=\"ending\">1.25</line-width><line-width type=\"wedge\">0.8333</line-width><line-width type=\"enclosure\">1.25</line-width><line-width type=\"tuplet bracket\">0.8333</line-width><note-size type=\"grace\">60</note-size><note-size type=\"cue\">60</note-size><distance type=\"hyphen\">100</distance><distance type=\"beam\">8</distance></appearance><music-font font-family=\"Maestro,engraved\" font-size=\"18\"/><word-font font-family=\"Times New Roman\" font-size=\"9\"/><lyric-font font-family=\"Times New Roman\" font-size=\"10\"/></defaults><part-list></part-list></score-partwise>';\n  xmlParser = new DOMParser();\n  xmlDoc = xmlParser.parseFromString(musicXML, 'application/xml');\n  // let text = document.getElementById('music_markdown_textarea').value;\n  let tokens = lex(str);\n  // glob_tokens = tokens;\n  var maxStave = 0;\n  var lastMeasureNumber = 0;\n  var lastStaveNumber = 0;\n\n  var initializedAttributes = false;\n  var lastTimeSig = \"\";\n  var lastKey = \"\";\n  var currentVoice = 1;\n  var currentChord = \"\";\n  var firstNote = false;\n  var oddChordFound = false;\n  var openRepeat = false;\n  var prevNoteInMeasure = \"\";\n\n  console.log(tokens);\n  xmlDoc = evaluate(tokens);\n  let xmlserializer = new XMLSerializer();\n  return xmlserializer.serializeToString(xmlDoc);\n  // return tokens;\n}\n\n// console.log(isMeasureMeta(\"$T, 4/4, Am$\"));\n\n/*\ntitle=me\nauthor=me\npiano {\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n|$T,4/4,Am$ [(A,3,3),(C,3,3),(E,3,3)] (Db,4,3) (Eb,3,3)[(A,3,3),(C,3,3),(E,3,3)]|\n}\n*/\n","/Users/chen2886/Desktop/MusicMarkdown/Composer/src/OpenSheetDisplay.jsx",[],"/Users/chen2886/Desktop/MusicMarkdown/Composer/src/evaluate.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import { xmlDoc } from './parser';\n\nvar getFifths = {\n  CM: 0,\n  Am: 0,\n  GM: 1,\n  Em: 1,\n  DM: 2,\n  Bm: 2,\n  AM: 3,\n  'F#m': 3,\n  EM: 4,\n  'C#M': 4,\n  BM: 5,\n  'G#m': 5,\n  'F#M': 6,\n  'D#m': 6,\n  'C#M': 7,\n  'A#m': 7,\n  FM: -1,\n  Dm: -1,\n  BbM: -2,\n  Gm: -2,\n  EbM: -3,\n  Cm: -3,\n  AbM: -4,\n  Fm: -4,\n  DbM: -5,\n  Bbm: -5,\n  GbM: -6,\n  Ebm: -6,\n  CbM: -7,\n  Abm: -7,\n};\n\nvar maxStave = 0;\nvar lastMeasureNumber = 0;\nvar lastStaveNumber = 0;\n\nvar initializedAttributes = false;\nvar lastTimeSig = \"\";\nvar lastKey = \"\";\nvar currentVoice = 1;\nvar currentChord = \"\";\nvar firstNote = false;\nvar oddChordFound = false;\nvar openRepeat = false;\nvar prevNoteInMeasure = \"\";\n\nexport function evaluate(lexedInfo) {\n  lastMeasureNumber = 0;\n  function handleNote(note, isChord, staffNo) {\n      let noteElem = xmlDoc.createElement(\"note\");\n\n      let staffElem = xmlDoc.createElement(\"staff\");\n      staffElem.innerHTML = staffNo;\n\n      noteElem.appendChild(staffElem);\n\n      let hasStartSlur = false;\n      let hasStopSlur = false;\n\n      if (note[0] == \"-\") {\n          note = note.substring(1,note.length);   \n          hasStartSlur = true;\n      }\n\n      if (note[note.length - 1] == \"-\") {\n          note = note.substring(0,note.length - 1);  \n          hasStopSlur = true;\n      }\n\n      let noteData = note.substring(1, note.length - 1).split(\",\");\n      console.log(noteData);\n\n      let markdownNote = noteData[0].substring(0,1);\n      let isRest = false;\n      if (markdownNote === \"R\") {\n          isRest = true;\n      }\n      let mardownAlter = noteData[0].substring(1,2);\n      let markdownOctave = noteData[1];\n      let markdownDot = noteData[2];\n      let markdownType = noteData[3]; \n\n      let markdownDuration = 0;\n      if (markdownType == \"whole\") {\n          markdownDuration = 24 * 4;\n      } else if (markdownType == \"half\") {\n          markdownDuration = 24 * 2;\n      } else if (markdownType == \"quarter\") {\n          markdownDuration = 24;\n      } else if (markdownType == \"eighth\") {\n          markdownDuration = 24 * 0.5;\n      } else if (markdownType == \"16th\") {\n          markdownDuration = 24 * 0.25;\n      } else {\n          throw \"Syntax Error\";\n      }\n\n      if (markdownDot == 1) {\n          markdownDuration += (markdownDuration*0.5)\n      }\n\n      if (firstNote) {\n          currentChord = markdownType;\n      }\n\n      if (hasStopSlur) {\n          let notationsElem = xmlDoc.createElement(\"notations\");\n          let slurElem = xmlDoc.createElement(\"slur\");\n          slurElem.setAttribute(\"bezier-x\",\"-16\");\n          slurElem.setAttribute(\"bezier-y\",\"14\");\n          slurElem.setAttribute(\"default-x\",\"7\");\n          slurElem.setAttribute(\"default-y\",\"-15\");\n          slurElem.setAttribute(\"number\",\"1\");\n          slurElem.setAttribute(\"type\",\"stop\");\n          notationsElem.appendChild(slurElem);\n          noteElem.append(notationsElem);\n      }\n\n      if (hasStartSlur) {\n          let notationsElem = xmlDoc.createElement(\"notations\");\n          let slurElem = xmlDoc.createElement(\"slur\");\n          slurElem.setAttribute(\"bezier-x\",\"19\");\n          slurElem.setAttribute(\"bezier-y\",\"12\");\n          slurElem.setAttribute(\"default-x\",\"6\");\n          slurElem.setAttribute(\"default-y\",\"-11\");\n          slurElem.setAttribute(\"number\",\"1\");\n          if (markdownOctave <= 3) {\n              slurElem.setAttribute(\"placement\",\"below\");\n          } else {\n              if (markdownOctave == 4) {\n                  if (markdownNote == \"B\") {\n                      slurElem.setAttribute(\"placement\",\"above\");\n                  } else {\n                      slurElem.setAttribute(\"placement\",\"below\");\n                  }\n              } else {\n                  slurElem.setAttribute(\"placement\",\"above\");\n              }\n          }\n          slurElem.setAttribute(\"type\",\"start\");\n          notationsElem.appendChild(slurElem);\n          noteElem.append(notationsElem);\n      }\n\n      let pitchElem = xmlDoc.createElement(\"pitch\");\n      let stepElem = xmlDoc.createElement(\"step\");\n      let alterElem = xmlDoc.createElement(\"alter\");\n      let octaveElem = xmlDoc.createElement(\"octave\");\n      let typeElem = xmlDoc.createElement(\"type\");\n      let durationElem = xmlDoc.createElement(\"duration\");\n      if (isRest) {\n          var restElem = xmlDoc.createElement(\"rest\");\n          restElem.setAttribute(\"measure\",\"yes\");\n      }\n      \n      stepElem.innerHTML = markdownNote;\n      if (mardownAlter == \"b\") {\n          alterElem.innerHTML = \"-1\";\n      } else if (mardownAlter == \"#\") {\n          alterElem.innerHTML = \"1\";\n      }\n\n      octaveElem.innerHTML = markdownOctave;\n      durationElem.innerHTML = markdownDuration;\n      typeElem.innerHTML = markdownType;\n      // typeElem.innerHTML = \"quarter\";\n\n      pitchElem.appendChild(stepElem);\n      pitchElem.appendChild(alterElem);\n      pitchElem.appendChild(octaveElem);\n\n      if (isRest) {\n          noteElem.appendChild(restElem);\n          noteElem.appendChild(durationElem);\n          return noteElem;\n      }\n\n      console.log(markdownType+\" \"+prevNoteInMeasure);\n      if (markdownType == prevNoteInMeasure) {\n          if (markdownType == \"eighth\") {\n              let beamElem = xmlDoc.createElement(\"beam\");\n              beamElem.setAttribute(\"number\",\"1\");\n              beamElem.innerHTML = \"continue\";\n              noteElem.appendChild(beamElem);\n          } else if (markdownType == \"16th\") {\n              let beamElem1 = xmlDoc.createElement(\"beam\");\n              let beamElem2 = xmlDoc.createElement(\"beam\");\n              beamElem1.setAttribute(\"number\",\"1\");\n              beamElem2.setAttribute(\"number\",\"2\");\n              \n              beamElem1.innerHTML = \"continue\";\n              beamElem2.innerHTML = \"continue\";\n              noteElem.appendChild(beamElem1);\n              noteElem.appendChild(beamElem2);\n          }\n      } else {\n          if (markdownType == \"eighth\") {\n              let beamElem = xmlDoc.createElement(\"beam\");\n              beamElem.setAttribute(\"number\",\"1\");\n              beamElem.innerHTML = \"begin\";\n              noteElem.appendChild(beamElem);\n          } else if (markdownType == \"16th\" && prevNoteInMeasure != \"eighth\") {\n              let beamElem1 = xmlDoc.createElement(\"beam\");\n              let beamElem2 = xmlDoc.createElement(\"beam\");\n              beamElem1.setAttribute(\"number\",\"1\");\n              beamElem2.setAttribute(\"number\",\"2\");\n              \n              beamElem1.innerHTML = \"begin\";\n              beamElem2.innerHTML = \"begin\";\n              noteElem.appendChild(beamElem1);\n              noteElem.appendChild(beamElem2);\n          } else if (markdownType == \"16th\" && prevNoteInMeasure == \"eighth\") {\n              let beamElem1 = xmlDoc.createElement(\"beam\");\n              let beamElem2 = xmlDoc.createElement(\"beam\");\n              beamElem1.setAttribute(\"number\",\"1\");\n              beamElem2.setAttribute(\"number\",\"2\");\n              \n              beamElem1.innerHTML = \"continue\";\n              beamElem2.innerHTML = \"begin\";\n              noteElem.appendChild(beamElem1);\n              noteElem.appendChild(beamElem2);\n          } else if (prevNoteInMeasure == \"eighth\") {\n              let beamElems = xmlDoc.getElementsByTagName(\"beam\");\n              if (beamElems.length != 0) {\n                  let lastBeamElem = beamElems[beamElems.length - 1];\n                  lastBeamElem.innerHTML = \"end\";\n              }\n          } else if (prevNoteInMeasure == \"16th\") {\n              let beamElems = xmlDoc.getElementsByTagName(\"beam\");\n              if (beamElems.length != 0) {\n                  let lastBeamElem1 = beamElems[beamElems.length - 2];\n                  let lastBeamElem2 = beamElems[beamElems.length - 1];\n  \n                  lastBeamElem1.innerHTML = \"end\";\n                  lastBeamElem2.innerHTML = \"end\";\n              }\n          }\n      }\n\n      noteElem.appendChild(pitchElem);\n      noteElem.appendChild(durationElem);\n      noteElem.appendChild(typeElem);\n\n      if (isChord) {\n          let chordElem = xmlDoc.createElement(\"chord\");\n          if (markdownType != currentChord) {\n              if (oddChordFound == false) {\n                  oddChordFound = true;\n                  currentVoice++;\n              }\n              let voiceElem = xmlDoc.createElement(\"voice\");\n              voiceElem.innerHTML = currentVoice;\n              noteElem.appendChild(voiceElem);\n          }\n          noteElem.appendChild(chordElem);\n      }\n\n      prevNoteInMeasure = markdownType;\n\n      return noteElem;\n  }\n\n  function handleMeasure (measure) {\n      // let tempString = \"\";\n      let measureNode = \"\";\n      if (measure.measureNum == lastMeasureNumber) {\n          console.log(\"hit eq \"+lastMeasureNumber);\n          let measureNodes = xmlDoc.getElementsByTagName(\"measure\");\n          console.log(measureNodes.length);\n          for (let i = 0; i < measureNodes.length; i++) {\n              console.log(measureNodes[i].getAttribute(\"number\")+\" \"+lastMeasureNumber);\n              if (measureNodes[i].getAttribute(\"number\") == lastMeasureNumber) {\n                  measureNode = measureNodes[i];\n                  break;\n              }\n          }\n      } else {\n          console.log(\"hit not eq\");\n          measureNode = xmlDoc.createElement(\"measure\");\n          measureNode.setAttribute(\"number\",measure.measureNum);\n      }\n\n      let measureLexElems = measure.value;\n      // let staveElem = xmlDoc.createElement(\"staves\");\n      for (let i = 0; i < measureLexElems.length; i++) {\n          var measureLexElem = measureLexElems[i];\n          if (measure.measureNum == 1 && i == 0 && measureLexElem.type != \"measureMeta\") {\n              console.log(measure.measureNum, measureLexElem.type);\n              throw \"Syntax Error\";\n          }\n          console.log(lastStaveNumber+\" \"+measure.staveNum);\n          if (lastStaveNumber != measure.staveNum && lastStaveNumber != 0 && measureNode.getElementsByTagName(\"backup\").length == 0) {\n              let backupElem = xmlDoc.createElement(\"backup\");\n              let durElem = xmlDoc.createElement(\"duration\");\n              durElem.innerHTML = \"300\";\n              backupElem.appendChild(durElem);\n              measureNode.append(backupElem);\n          }\n\n          if (measureLexElem.type == \"measureMeta\") {\n              let attributesElem = \"\";\n              let staveElem = \"\";\n              // will only be one element\n              console.log(measureNode);\n              let attributesElems = measureNode.getElementsByTagName(\"attributes\");\n              if (attributesElems.length != 0) {\n                  attributesElem = attributesElems[0];\n                  staveElem = attributesElem.getElementsByTagName(\"staves\")[0];\n                  // let backupElem = xmlDoc.createElement(\"backup\");\n                  // let durElem = xmlDoc.createElement(\"duration\");\n                  // durElem.innerHTML = \"300\";\n                  // backupElem.appendChild(durElem);\n                  // measureNode.append(backupElem);\n              } else {    \n                  attributesElem = xmlDoc.createElement(\"attributes\");\n                  staveElem = xmlDoc.createElement(\"staves\");\n              }\n\n              console.log(attributesElem);\n              let measureMeta = measureLexElem.value.substring(1,measureLexElem.value.length - 1).split(\",\");\n              \n              let markdownClef = measureMeta[0];\n              let markdownTimeSig = measureMeta[1];\n              let markdownKeySig = measureMeta[2];\n              \n              let xmlClef = \"\";\n              if (markdownClef == \"T\") {\n                  xmlClef = \"G\";\n              } else if (markdownClef == \"B\") {\n                  xmlClef = \"F\";\n              } else {\n                  throw \"Syntax Error\";\n              }\n              console.log(measure+\" \"+measure.staveNum);\n              let clefElem = xmlDoc.createElement(\"clef\");\n              if (measure.staveNum > maxStave) {\n                  staveElem.innerHTML = measure.staveNum;\n\n              }\n              if (attributesElem.getElementsByTagName(\"staves\").length == 0) {\n                  attributesElem.appendChild(staveElem);\n              }\n              \n              clefElem.setAttribute(\"number\",measure.staveNum);\n              let clefSignElem = xmlDoc.createElement(\"sign\");\n              clefSignElem.innerHTML = xmlClef;\n              let clefLineElem = xmlDoc.createElement(\"line\");\n              clefLineElem.innerHTML = \"2\";\n              clefElem.appendChild(clefSignElem);\n              clefElem.appendChild(clefLineElem);\n              attributesElem.appendChild(clefElem);\n              \n              if (attributesElem.getElementsByTagName(\"divisions\").length == 0) {\n                  let divisionsElem = xmlDoc.createElement(\"divisions\");\n                  divisionsElem.innerHTML = \"24\";\n                  attributesElem.appendChild(divisionsElem);\n              }\n\n              if (attributesElem.getElementsByTagName(\"time\").length == 0) {\n                  let timeSigElem = xmlDoc.createElement(\"time\");\n                  let beatsElem = xmlDoc.createElement(\"beats\");\n                  let beatsTypeElem = xmlDoc.createElement(\"beat-type\");\n\n                  let beatsLexData = markdownTimeSig.split(\"/\");\n\n                  beatsElem.innerHTML = beatsLexData[0];\n                  beatsTypeElem.innerHTML = beatsLexData[1];\n                  \n                  timeSigElem.appendChild(beatsElem);\n                  timeSigElem.appendChild(beatsTypeElem);\n                  attributesElem.appendChild(timeSigElem);\n              }\n\n              if (attributesElem.getElementsByTagName(\"key\").length == 0) {\n                  let keySigElem = xmlDoc.createElement(\"key\");\n                  let fifthsElem = xmlDoc.createElement(\"fifths\");\n\n                  fifthsElem.innerHTML = getFifths[markdownKeySig];\n                  \n                  keySigElem.appendChild(fifthsElem);\n                  attributesElem.appendChild(keySigElem);\n              }\n              \n              if (measureNode.getElementsByTagName(\"attributes\").length == 0) {\n                  measureNode.insertBefore(attributesElem,measureNode.firstChild);\n              }\n          } else if (measureLexElem.type == \"futureMeasureMeta\") {\n              let attributesElem = \"\";\n              // will only be one element\n              console.log(measureNode);\n              let attributesElems = measureNode.getElementsByTagName(\"attributes\");\n              if (attributesElems.length != 0) {\n                  attributesElem = attributesElems[0];\n              } else {    \n                  attributesElem = xmlDoc.createElement(\"attributes\");\n              }\n\n              let measureMeta = measureLexElem.value.substring(1,measureLexElem.value.length - 1).split(\",\");\n              \n              let markdownTimeSig = measureMeta[0];\n              let markdownKeySig = measureMeta[1];\n\n              if (attributesElem.getElementsByTagName(\"time\").length == 0) {\n                  let timeSigElem = xmlDoc.createElement(\"time\");\n                  let beatsElem = xmlDoc.createElement(\"beats\");\n                  let beatsTypeElem = xmlDoc.createElement(\"beat-type\");\n\n                  let beatsLexData = markdownTimeSig.split(\"/\");\n\n                  beatsElem.innerHTML = beatsLexData[0];\n                  beatsTypeElem.innerHTML = beatsLexData[1];\n                  \n                  timeSigElem.appendChild(beatsElem);\n                  timeSigElem.appendChild(beatsTypeElem);\n                  attributesElem.appendChild(timeSigElem);\n              }\n\n              if (attributesElem.getElementsByTagName(\"key\").length == 0) {\n                  let keySigElem = xmlDoc.createElement(\"key\");\n                  let fifthsElem = xmlDoc.createElement(\"fifths\");\n\n                  fifthsElem.innerHTML = getFifths[markdownKeySig];\n                  \n                  keySigElem.appendChild(fifthsElem);\n                  attributesElem.appendChild(keySigElem);\n              }\n              if (measureNode.getElementsByTagName(\"attributes\").length == 0) {\n                  measureNode.insertBefore(attributesElem,measureNode.firstChild);\n              }\n          } else if (measureLexElem.type == \"crescendo\") {\n              let directionNode = xmlDoc.createElement(\"direction\");\n              let directionTypeNode = xmlDoc.createElement(\"direction-type\");\n              let wedgeNode = xmlDoc.createElement(\"wedge\");\n              let offsetNode = xmlDoc.createElement(\"offset\");\n              \n              let offsetAmount = measureLexElem.value.substring(1,measureLexElem.length);\n              offsetNode.innerHTML = offsetAmount;\n\n              directionNode.setAttribute(\"placement\",\"above\");\n              wedgeNode.setAttribute(\"default-y\",\"20\");\n              wedgeNode.setAttribute(\"type\",\"crescendo\");\n              directionTypeNode.appendChild(wedgeNode);\n              directionNode.appendChild(directionTypeNode);\n              directionNode.appendChild(offsetNode);\n              measureNode.appendChild(directionNode);\n\n          } else if (measureLexElem.type == \"diminuendo\") {\n              let directionNode = xmlDoc.createElement(\"direction\");\n              let directionTypeNode = xmlDoc.createElement(\"direction-type\");\n              let wedgeNode = xmlDoc.createElement(\"wedge\");\n              let offsetNode = xmlDoc.createElement(\"offset\");\n              \n              let offsetAmount = measureLexElem.value.substring(1,measureLexElem.length);\n              offsetNode.innerHTML = offsetAmount;\n\n              directionNode.setAttribute(\"placement\",\"above\");\n              wedgeNode.setAttribute(\"default-y\",\"20\");\n              wedgeNode.setAttribute(\"type\",\"diminuendo\");\n              directionTypeNode.appendChild(wedgeNode);\n              directionNode.appendChild(directionTypeNode);\n              directionNode.appendChild(offsetNode);\n              measureNode.appendChild(directionNode);\n          } else if (measureLexElem.type == \"repeat\") {\n              let barlineElem = xmlDoc.createElement(\"barline\");\n              let repeatElem = xmlDoc.createElement(\"repeat\");\n              let barStyleElem = xmlDoc.createElement(\"bar-style\");\n              if (measure.staveNum != 1) {\n                  continue;\n              }\n              if (!openRepeat) {\n                  barlineElem.setAttribute(\"location\",\"left\");\n                  barStyleElem.innerHTML = \"heavy-light\";\n                  repeatElem.setAttribute(\"direction\",\"forward\");\n                  openRepeat = true;\n              } else {\n                  barlineElem.setAttribute(\"location\",\"right\");\n                  barStyleElem.innerHTML = \"light-heavy\";\n                  repeatElem.setAttribute(\"direction\",\"backward\");\n                  openRepeat = false;\n              }\n\n              barlineElem.appendChild(barStyleElem);\n              barlineElem.appendChild(repeatElem);\n              measureNode.appendChild(barlineElem);\n\n          } else if (measureLexElem.type == \"chord\") {\n              if (oddChordFound) {\n                  oddChordFound = false;\n                  // currentVoice++;\n              }\n              currentChord = \"\";\n              let chordNotes = measureLexElem.value\n              console.log(chordNotes);\n\n              for (let j = 0; j < chordNotes.length; j++) {\n                  firstNote = j==0;\n                  let noteXML = handleNote(chordNotes[j].value,!firstNote,measure.staveNum);\n                  measureNode.appendChild(noteXML);\n                  firstNote = false;\n              }\n          } else if (measureLexElem.type == \"note\") {\n              let noteXML = handleNote(measureLexElem.value,false,measure.staveNum);\n              measureNode.appendChild(noteXML);\n          }\n      }\n      return measureNode;\n\n  }\n  function handleInstrument (instrument,partNum) {\n      maxStave = 0;\n      let tempString = \"\";\n      let type = instrument.instrument;\n      \n      let partList = xmlDoc.getElementsByTagName(\"part-list\")[0];\n      \n      let scorePart = xmlDoc.createElement(\"score-part\");\n      scorePart.id = \"P\"+partNum;\n\n      let partName = xmlDoc.createElement(\"part-name\");\n      partName.innerHTML = type;\n\n      scorePart.appendChild(partName);\n      partList.appendChild(scorePart);\n\n      let partMeasures = xmlDoc.createElement(\"part\");\n      partMeasures.id = scorePart.id;\n      xmlDoc.getElementsByTagName(\"score-partwise\")[0].appendChild(partMeasures);\n\n      let measures = instrument.value;\n      for (let i = 0; i < measures.length; i++) {\n          if (measures[i].measureNum == 2) {\n              initializedAttributes = true;\n          }\n          let measureXML = handleMeasure(measures[i], false);\n          if (measures[i].measureNum != lastMeasureNumber) {\n              console.log(\"appended\");\n              partMeasures.appendChild(measureXML);\n              lastMeasureNumber = measures[i].measureNum;\n              lastStaveNumber = measures[i].staveNum;\n          }\n          \n          prevNoteInMeasure = \"\";\n      }\n\n      return partMeasures;\n  }\n      \n  var instrumentNum = 0;\n  for (var i = 0; i < lexedInfo.length; i++) {\n      if (lexedInfo[i].type === \"author\") {\n          // curString += \"<work-number>\" + lexedInfo[i].value + \"</work-title>\";\n\n          xmlDoc.getElementsByTagName(\"work-number\")[0].innerHTML = lexedInfo[i].value.substring(7,lexedInfo[i].value.length);\n      } else if (lexedInfo[i].type === \"title\") {\n          // curString += \"<work-title>\" + lexedInfo[i].value + \"</work-title>\";\n          xmlDoc.getElementsByTagName(\"work-title\")[0].innerHTML = lexedInfo[i].value.substring(6,lexedInfo[i].value.length);; \n      } else {\n          instrumentNum++;\n          lastMeasureNumber = 0;\n          // type is instrument\n          // if (curString === \"<work>\") {\n          //     // no title/author provided\n          //     curString += \"<work-title>New Song</work-title></work>\";\n          // }\n          // for (let j = 0; j < lexedInfo[i].value.length; j++) {\n          let instrumentXML = handleInstrument(lexedInfo[i],instrumentNum);\n          xmlDoc.getElementsByTagName(\"score-partwise\")[0].appendChild(instrumentXML);\n          // }\n      }\n  }\n\n  return xmlDoc;\n}\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"162","severity":1,"message":"166","line":1,"column":25,"nodeType":"164","messageId":"165","endLine":1,"endColumn":33},{"ruleId":"162","severity":1,"message":"167","line":5,"column":3,"nodeType":"164","messageId":"165","endLine":5,"endColumn":13},{"ruleId":"162","severity":1,"message":"168","line":8,"column":3,"nodeType":"164","messageId":"165","endLine":8,"endColumn":12},{"ruleId":"162","severity":1,"message":"169","line":9,"column":3,"nodeType":"164","messageId":"165","endLine":9,"endColumn":16},{"ruleId":"162","severity":1,"message":"170","line":10,"column":3,"nodeType":"164","messageId":"165","endLine":10,"endColumn":12},{"ruleId":"162","severity":1,"message":"171","line":30,"column":35,"nodeType":"164","messageId":"165","endLine":30,"endColumn":39},{"ruleId":"162","severity":1,"message":"172","line":32,"column":8,"nodeType":"164","messageId":"165","endLine":32,"endColumn":13},{"ruleId":"162","severity":1,"message":"173","line":202,"column":42,"nodeType":"164","messageId":"165","endLine":202,"endColumn":55},{"ruleId":"162","severity":1,"message":"174","line":202,"column":57,"nodeType":"164","messageId":"165","endLine":202,"endColumn":65},{"ruleId":"162","severity":1,"message":"175","line":202,"column":67,"nodeType":"164","messageId":"165","endLine":202,"endColumn":80},{"ruleId":"162","severity":1,"message":"176","line":19,"column":10,"nodeType":"164","messageId":"165","endLine":19,"endColumn":14},{"ruleId":"162","severity":1,"message":"177","line":21,"column":18,"nodeType":"164","messageId":"165","endLine":21,"endColumn":25},{"ruleId":"162","severity":1,"message":"178","line":21,"column":27,"nodeType":"164","messageId":"165","endLine":21,"endColumn":34},{"ruleId":"162","severity":1,"message":"179","line":21,"column":36,"nodeType":"164","messageId":"165","endLine":21,"endColumn":39},{"ruleId":"162","severity":1,"message":"180","line":62,"column":10,"nodeType":"164","messageId":"165","endLine":62,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":87,"column":6,"nodeType":"183","endLine":87,"endColumn":8,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":19,"column":22,"nodeType":"187","messageId":"188","endLine":19,"endColumn":23,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":23,"column":12,"nodeType":"192","messageId":"193","endLine":23,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":27,"column":15,"nodeType":"192","messageId":"193","endLine":27,"endColumn":17},{"ruleId":"190","severity":1,"message":"191","line":42,"column":12,"nodeType":"192","messageId":"193","endLine":42,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":54,"column":12,"nodeType":"192","messageId":"193","endLine":54,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":58,"column":12,"nodeType":"192","messageId":"193","endLine":58,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":62,"column":12,"nodeType":"192","messageId":"193","endLine":62,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":66,"column":12,"nodeType":"192","messageId":"193","endLine":66,"endColumn":14},{"ruleId":"162","severity":1,"message":"194","line":73,"column":10,"nodeType":"164","messageId":"165","endLine":73,"endColumn":22},{"ruleId":"162","severity":1,"message":"195","line":77,"column":10,"nodeType":"164","messageId":"165","endLine":77,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":78,"column":12,"nodeType":"192","messageId":"193","endLine":78,"endColumn":14},{"ruleId":"162","severity":1,"message":"196","line":85,"column":7,"nodeType":"164","messageId":"165","endLine":85,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":99,"column":20,"nodeType":"192","messageId":"193","endLine":99,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":142,"column":26,"nodeType":"192","messageId":"193","endLine":142,"endColumn":28},{"ruleId":"162","severity":1,"message":"197","line":177,"column":15,"nodeType":"164","messageId":"165","endLine":177,"endColumn":23},{"ruleId":"162","severity":1,"message":"196","line":192,"column":7,"nodeType":"164","messageId":"165","endLine":192,"endColumn":14},{"ruleId":"162","severity":1,"message":"198","line":193,"column":14,"nodeType":"164","messageId":"165","endLine":193,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":209,"column":12,"nodeType":"164","messageId":"201","endLine":209,"endColumn":13},{"ruleId":"199","severity":1,"message":"202","line":220,"column":19,"nodeType":"164","messageId":"201","endLine":220,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":227,"column":30,"nodeType":"192","messageId":"193","endLine":227,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":227,"column":53,"nodeType":"192","messageId":"193","endLine":227,"endColumn":55},{"ruleId":"162","severity":1,"message":"203","line":243,"column":5,"nodeType":"164","messageId":"165","endLine":243,"endColumn":16},{"ruleId":"162","severity":1,"message":"204","line":253,"column":7,"nodeType":"164","messageId":"165","endLine":253,"endColumn":15},{"ruleId":"162","severity":1,"message":"205","line":254,"column":7,"nodeType":"164","messageId":"165","endLine":254,"endColumn":24},{"ruleId":"162","severity":1,"message":"206","line":255,"column":7,"nodeType":"164","messageId":"165","endLine":255,"endColumn":22},{"ruleId":"162","severity":1,"message":"207","line":257,"column":7,"nodeType":"164","messageId":"165","endLine":257,"endColumn":28},{"ruleId":"162","severity":1,"message":"208","line":258,"column":7,"nodeType":"164","messageId":"165","endLine":258,"endColumn":18},{"ruleId":"162","severity":1,"message":"209","line":259,"column":7,"nodeType":"164","messageId":"165","endLine":259,"endColumn":14},{"ruleId":"162","severity":1,"message":"210","line":260,"column":7,"nodeType":"164","messageId":"165","endLine":260,"endColumn":19},{"ruleId":"162","severity":1,"message":"211","line":261,"column":7,"nodeType":"164","messageId":"165","endLine":261,"endColumn":19},{"ruleId":"162","severity":1,"message":"212","line":262,"column":7,"nodeType":"164","messageId":"165","endLine":262,"endColumn":16},{"ruleId":"162","severity":1,"message":"213","line":263,"column":7,"nodeType":"164","messageId":"165","endLine":263,"endColumn":20},{"ruleId":"162","severity":1,"message":"214","line":264,"column":7,"nodeType":"164","messageId":"165","endLine":264,"endColumn":17},{"ruleId":"162","severity":1,"message":"215","line":265,"column":7,"nodeType":"164","messageId":"165","endLine":265,"endColumn":24},{"ruleId":"216","severity":1,"message":"217","line":18,"column":3,"nodeType":"218","messageId":"193","endLine":18,"endColumn":8},{"ruleId":"162","severity":1,"message":"208","line":41,"column":5,"nodeType":"164","messageId":"165","endLine":41,"endColumn":16},{"ruleId":"162","severity":1,"message":"209","line":42,"column":5,"nodeType":"164","messageId":"165","endLine":42,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":63,"column":19,"nodeType":"192","messageId":"193","endLine":63,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":68,"column":33,"nodeType":"192","messageId":"193","endLine":68,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":87,"column":24,"nodeType":"192","messageId":"193","endLine":87,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":89,"column":31,"nodeType":"192","messageId":"193","endLine":89,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":91,"column":31,"nodeType":"192","messageId":"193","endLine":91,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":93,"column":31,"nodeType":"192","messageId":"193","endLine":93,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":95,"column":31,"nodeType":"192","messageId":"193","endLine":95,"endColumn":33},{"ruleId":"219","severity":1,"message":"220","line":98,"column":11,"nodeType":"221","messageId":"222","endLine":98,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":101,"column":23,"nodeType":"192","messageId":"193","endLine":101,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":133,"column":34,"nodeType":"192","messageId":"193","endLine":133,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":134,"column":36,"nodeType":"192","messageId":"193","endLine":134,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":160,"column":24,"nodeType":"192","messageId":"193","endLine":160,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":162,"column":31,"nodeType":"192","messageId":"193","endLine":162,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":182,"column":24,"nodeType":"192","messageId":"193","endLine":182,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":183,"column":28,"nodeType":"192","messageId":"193","endLine":183,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":188,"column":35,"nodeType":"192","messageId":"193","endLine":188,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":200,"column":28,"nodeType":"192","messageId":"193","endLine":200,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":205,"column":35,"nodeType":"192","messageId":"193","endLine":205,"endColumn":37},{"ruleId":"190","severity":1,"message":"223","line":205,"column":66,"nodeType":"192","messageId":"193","endLine":205,"endColumn":68},{"ruleId":"190","severity":1,"message":"191","line":215,"column":35,"nodeType":"192","messageId":"193","endLine":215,"endColumn":37},{"ruleId":"190","severity":1,"message":"191","line":215,"column":66,"nodeType":"192","messageId":"193","endLine":215,"endColumn":68},{"ruleId":"190","severity":1,"message":"191","line":225,"column":40,"nodeType":"192","messageId":"193","endLine":225,"endColumn":42},{"ruleId":"190","severity":1,"message":"223","line":227,"column":36,"nodeType":"192","messageId":"193","endLine":227,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":231,"column":40,"nodeType":"192","messageId":"193","endLine":231,"endColumn":42},{"ruleId":"190","severity":1,"message":"223","line":233,"column":36,"nodeType":"192","messageId":"193","endLine":233,"endColumn":38},{"ruleId":"190","severity":1,"message":"223","line":249,"column":28,"nodeType":"192","messageId":"193","endLine":249,"endColumn":30},{"ruleId":"190","severity":1,"message":"191","line":250,"column":33,"nodeType":"192","messageId":"193","endLine":250,"endColumn":35},{"ruleId":"190","severity":1,"message":"191","line":269,"column":30,"nodeType":"192","messageId":"193","endLine":269,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":275,"column":58,"nodeType":"192","messageId":"193","endLine":275,"endColumn":60},{"ruleId":"190","severity":1,"message":"191","line":290,"column":34,"nodeType":"192","messageId":"193","endLine":290,"endColumn":36},{"ruleId":"190","severity":1,"message":"191","line":290,"column":44,"nodeType":"192","messageId":"193","endLine":290,"endColumn":46},{"ruleId":"190","severity":1,"message":"223","line":290,"column":72,"nodeType":"192","messageId":"193","endLine":290,"endColumn":74},{"ruleId":"219","severity":1,"message":"220","line":292,"column":15,"nodeType":"221","messageId":"222","endLine":292,"endColumn":36},{"ruleId":"190","severity":1,"message":"223","line":295,"column":31,"nodeType":"192","messageId":"193","endLine":295,"endColumn":33},{"ruleId":"190","severity":1,"message":"223","line":295,"column":70,"nodeType":"192","messageId":"193","endLine":295,"endColumn":72},{"ruleId":"190","severity":1,"message":"191","line":295,"column":128,"nodeType":"192","messageId":"193","endLine":295,"endColumn":130},{"ruleId":"190","severity":1,"message":"191","line":303,"column":35,"nodeType":"192","messageId":"193","endLine":303,"endColumn":37},{"ruleId":"190","severity":1,"message":"223","line":309,"column":42,"nodeType":"192","messageId":"193","endLine":309,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":330,"column":32,"nodeType":"192","messageId":"193","endLine":330,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":332,"column":39,"nodeType":"192","messageId":"193","endLine":332,"endColumn":41},{"ruleId":"219","severity":1,"message":"220","line":335,"column":19,"nodeType":"221","messageId":"222","endLine":335,"endColumn":40},{"ruleId":"190","severity":1,"message":"191","line":343,"column":72,"nodeType":"192","messageId":"193","endLine":343,"endColumn":74},{"ruleId":"190","severity":1,"message":"191","line":356,"column":75,"nodeType":"192","messageId":"193","endLine":356,"endColumn":77},{"ruleId":"190","severity":1,"message":"191","line":362,"column":70,"nodeType":"192","messageId":"193","endLine":362,"endColumn":72},{"ruleId":"190","severity":1,"message":"191","line":377,"column":69,"nodeType":"192","messageId":"193","endLine":377,"endColumn":71},{"ruleId":"190","severity":1,"message":"191","line":387,"column":73,"nodeType":"192","messageId":"193","endLine":387,"endColumn":75},{"ruleId":"190","severity":1,"message":"191","line":390,"column":42,"nodeType":"192","messageId":"193","endLine":390,"endColumn":44},{"ruleId":"190","severity":1,"message":"223","line":395,"column":42,"nodeType":"192","messageId":"193","endLine":395,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":406,"column":70,"nodeType":"192","messageId":"193","endLine":406,"endColumn":72},{"ruleId":"190","severity":1,"message":"191","line":421,"column":69,"nodeType":"192","messageId":"193","endLine":421,"endColumn":71},{"ruleId":"190","severity":1,"message":"191","line":430,"column":73,"nodeType":"192","messageId":"193","endLine":430,"endColumn":75},{"ruleId":"190","severity":1,"message":"191","line":433,"column":42,"nodeType":"192","messageId":"193","endLine":433,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":450,"column":42,"nodeType":"192","messageId":"193","endLine":450,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":466,"column":42,"nodeType":"192","messageId":"193","endLine":466,"endColumn":44},{"ruleId":"190","severity":1,"message":"223","line":470,"column":36,"nodeType":"192","messageId":"193","endLine":470,"endColumn":38},{"ruleId":"190","severity":1,"message":"191","line":489,"column":42,"nodeType":"192","messageId":"193","endLine":489,"endColumn":44},{"ruleId":"190","severity":1,"message":"191","line":499,"column":32,"nodeType":"192","messageId":"193","endLine":499,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":504,"column":42,"nodeType":"192","messageId":"193","endLine":504,"endColumn":44},{"ruleId":"162","severity":1,"message":"224","line":514,"column":11,"nodeType":"164","messageId":"165","endLine":514,"endColumn":21},{"ruleId":"190","severity":1,"message":"191","line":534,"column":38,"nodeType":"192","messageId":"193","endLine":534,"endColumn":40},{"ruleId":"162","severity":1,"message":"207","line":535,"column":15,"nodeType":"164","messageId":"165","endLine":535,"endColumn":36},{"ruleId":"190","severity":1,"message":"223","line":538,"column":38,"nodeType":"192","messageId":"193","endLine":538,"endColumn":40},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'CardHeader' is defined but never used.","'CardTitle' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'OSMD' is defined but never used.","'jsPDF' is defined but never used.","'saveFileModal' is assigned a value but never used.","'fileName' is assigned a value but never used.","'fileNameFocus' is assigned a value but never used.","'Link' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'loginInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["227"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["228","229"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isWhitespace' is defined but never used.","'isNewline' is defined but never used.","'advance' is assigned a value but never used.","'isInNote' is assigned a value but never used.","'c' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'staveNum' is already defined.","'glob_tokens' is defined but never used.","'maxStave' is assigned a value but never used.","'lastMeasureNumber' is assigned a value but never used.","'lastStaveNumber' is assigned a value but never used.","'initializedAttributes' is assigned a value but never used.","'lastTimeSig' is assigned a value but never used.","'lastKey' is assigned a value but never used.","'currentVoice' is assigned a value but never used.","'currentChord' is assigned a value but never used.","'firstNote' is assigned a value but never used.","'oddChordFound' is assigned a value but never used.","'openRepeat' is assigned a value but never used.","'prevNoteInMeasure' is assigned a value but never used.","no-dupe-keys","Duplicate key 'C#M'.","ObjectExpression","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Expected '!==' and instead saw '!='.","'tempString' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"230","fix":"231"},{"messageId":"232","fix":"233","desc":"234"},{"messageId":"235","fix":"236","desc":"237"},"Update the dependencies array to be: [props]",{"range":"238","text":"239"},"removeEscape",{"range":"240","text":"241"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"242","text":"243"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2978,2980],"[props]",[2110,2111],"",[2110,2110],"\\"]